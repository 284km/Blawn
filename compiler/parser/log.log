Nonterminals useless in grammar

   index


Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   LEFT_BRACKET
   RIGHT_BRACKET
   IN
   WHILE


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"
    7     | definition

    8 line_content: expression

    9 definition: function_definition
   10           | class_definition

   11 function_definition: function_start arguments EOL lines return_value EOL

   12 function_start: FUNCTION_DEFINITION

   13 class_definition: class_start arguments EOL members_definition methods
   14                 | class_start arguments EOL members_definition
   15                 | class_start arguments EOL methods

   16 class_start: CLASS_DEFINITION

   17 methods: method_definition EOL
   18        | methods method_definition EOL

   19 method_definition: METHOD_DEFINITION arguments EOL lines return_value

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   21                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   22 return_value: RETURN expression
   23             | RETURN

   24 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   26 definition_arguments: IDENTIFIER
   27                     | definition_arguments COMMA IDENTIFIER

   28 expressions: expression
   29            | expressions COMMA expression

   30 if_start: IF

   31 else_start: ELSE

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | monomial
   36           | assign_variable
   37           | expression PLUS expression
   38           | expression MINUS expression
   39           | expression ASTERISK expression
   40           | expression SLASH expression
   41           | expression OP_AND expression
   42           | expression OP_OR expression
   43           | expression OP_EQUAL expression
   44           | expression OP_NOT_EQUAL expression
   45           | list
   46           | access

   47 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE

   48 access: expression DOT_IDENTIFIER

   49 assign_variable: IDENTIFIER EQUAL expression
   50                | access EQUAL expression

   51 monomial: call
   52         | STRING_LITERAL
   53         | FLOAT_LITERAL
   54         | INT_LITERAL
   55         | variable

   56 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | access LEFT_PARENTHESIS RIGHT_PARENTHESIS

   60 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 12
METHOD_DEFINITION (259) 19
CLASS_DEFINITION (260) 16
RETURN (261) 22 23
C_FUNCTION (262)
MEMBER_IDENTIFIER (263) 20 21
IDENTIFIER (264) 26 27 49 56 57 60
EQUAL (265) 20 21 49 50
PLUS (266) 37
MINUS (267) 38
ASTERISK (268) 39
SLASH (269) 40
DOT_IDENTIFIER (270) 48
OP_EQUAL (271) 43
OP_NOT_EQUAL (272) 44
OP_AND (273) 41
OP_OR (274) 42
USE (275)
COLON (276)
SEMICOLON (277)
COMMA (278) 27 29 34
LEFT_PARENTHESIS (279) 24 25 32 33 34 56 57 58 59
RIGHT_PARENTHESIS (280) 24 25 32 33 34 56 57 58 59
LEFT_CURLY_BRACE (281) 47
RIGHT_CURLY_BRACE (282) 47
LEFT_BRACKET (283)
RIGHT_BRACKET (284)
IF (285) 30
ELSE (286) 31
FOR (287) 34
IN (288)
WHILE (289)
EOL (290) 5 11 13 14 15 17 18 19 20 21 32 33 34
INT_LITERAL (291) 54
FLOAT_LITERAL (292) 53
STRING_LITERAL (293) 52


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
program (40)
    on left: 1, on right: 0
block (41)
    on left: 2, on right: 1 32 33 34
lines (42)
    on left: 3 4, on right: 2 4 11 19
line (43)
    on left: 5 6 7, on right: 3 4
line_content (44)
    on left: 8, on right: 5 6
definition (45)
    on left: 9 10, on right: 7
function_definition (46)
    on left: 11, on right: 9
function_start (47)
    on left: 12, on right: 11
class_definition (48)
    on left: 13 14 15, on right: 10
class_start (49)
    on left: 16, on right: 13 14 15
methods (50)
    on left: 17 18, on right: 13 15 18
method_definition (51)
    on left: 19, on right: 17 18
members_definition (52)
    on left: 20 21, on right: 13 14 21
return_value (53)
    on left: 22 23, on right: 11 19
arguments (54)
    on left: 24 25, on right: 11 13 14 15 19
definition_arguments (55)
    on left: 26 27, on right: 24 27
expressions (56)
    on left: 28 29, on right: 29 47 56 58
if_start (57)
    on left: 30, on right: 32
else_start (58)
    on left: 31, on right: 33
expression (59)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46, on right:
    8 20 21 22 28 29 32 34 37 38 39 40 41 42 43 44 48 49 50
list (60)
    on left: 47, on right: 45
access (61)
    on left: 48, on right: 46 50 58 59
assign_variable (62)
    on left: 49 50, on right: 36
monomial (63)
    on left: 51 52 53 54 55, on right: 35
call (64)
    on left: 56 57 58 59, on right: 51
variable (65)
    on left: 60, on right: 55


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    program              go to state 11
    block                go to state 12
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 1

   12 function_start: FUNCTION_DEFINITION .

    $default  reduce using rule 12 (function_start)


State 2

   16 class_start: CLASS_DEFINITION .

    $default  reduce using rule 16 (class_start)


State 3

   49 assign_variable: IDENTIFIER . EQUAL expression
   56 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: IDENTIFIER .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    EQUAL             shift, and go to state 30
    LEFT_PARENTHESIS  shift, and go to state 31

    $default  reduce using rule 60 (variable)


State 4

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   47     | LEFT_CURLY_BRACE . expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    expressions      go to state 32
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 33
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 5

   30 if_start: IF .

    $default  reduce using rule 30 (if_start)


State 6

   31 else_start: ELSE .

    $default  reduce using rule 31 (else_start)


State 7

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR . expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 34
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 8

   54 monomial: INT_LITERAL .

    $default  reduce using rule 54 (monomial)


State 9

   53 monomial: FLOAT_LITERAL .

    $default  reduce using rule 53 (monomial)


State 10

   52 monomial: STRING_LITERAL .

    $default  reduce using rule 52 (monomial)


State 11

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 35


State 12

    1 program: block .

    $default  reduce using rule 1 (program)


State 13

    2 block: lines .  ["end of file", RIGHT_PARENTHESIS]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    $default  reduce using rule 2 (block)

    line                 go to state 36
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 14

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 15

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 37
    EOL            shift, and go to state 38


State 16

    7 line: definition .

    $default  reduce using rule 7 (line)


State 17

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 18

   11 function_definition: function_start . arguments EOL lines return_value EOL
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 39

    arguments  go to state 40


State 19

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 20

   13 class_definition: class_start . arguments EOL members_definition methods
   14                 | class_start . arguments EOL members_definition
   15                 | class_start . arguments EOL methods
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 39

    arguments  go to state 41


State 21

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   32           | if_start . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 42
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 22

   33 expression: else_start . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 43


State 23

    8 line_content: expression .  ["end of file", EOL]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 8 (line_content)


State 24

   45 expression: list .

    $default  reduce using rule 45 (expression)


State 25

   46 expression: access .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   50 assign_variable: access . EQUAL expression
   58 call: access . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | access . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    EQUAL             shift, and go to state 53
    LEFT_PARENTHESIS  shift, and go to state 54

    $default  reduce using rule 46 (expression)


State 26

   36 expression: assign_variable .

    $default  reduce using rule 36 (expression)


State 27

   35 expression: monomial .

    $default  reduce using rule 35 (expression)


State 28

   51 monomial: call .

    $default  reduce using rule 51 (monomial)


State 29

   55 monomial: variable .

    $default  reduce using rule 55 (monomial)


State 30

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   49                | IDENTIFIER EQUAL . expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 55
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 31

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   56     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   57     | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 3
    RIGHT_PARENTHESIS  shift, and go to state 56
    LEFT_CURLY_BRACE   shift, and go to state 4
    IF                 shift, and go to state 5
    ELSE               shift, and go to state 6
    FOR                shift, and go to state 7
    INT_LITERAL        shift, and go to state 8
    FLOAT_LITERAL      shift, and go to state 9
    STRING_LITERAL     shift, and go to state 10

    expressions      go to state 57
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 33
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 32

   29 expressions: expressions . COMMA expression
   47 list: LEFT_CURLY_BRACE expressions . RIGHT_CURLY_BRACE

    COMMA              shift, and go to state 58
    RIGHT_CURLY_BRACE  shift, and go to state 59


State 33

   28 expressions: expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 28 (expressions)


State 34

   34 expression: FOR expression . COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    COMMA           shift, and go to state 60


State 35

    0 $accept: program "end of file" .

    $default  accept


State 36

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 37

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 38

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 39

   24 arguments: LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS
   25          | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   26 definition_arguments: . IDENTIFIER
   27                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER         shift, and go to state 61
    RIGHT_PARENTHESIS  shift, and go to state 62

    definition_arguments  go to state 63


State 40

   11 function_definition: function_start arguments . EOL lines return_value EOL

    EOL  shift, and go to state 64


State 41

   13 class_definition: class_start arguments . EOL members_definition methods
   14                 | class_start arguments . EOL members_definition
   15                 | class_start arguments . EOL methods

    EOL  shift, and go to state 65


State 42

   32 expression: if_start expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    EOL             shift, and go to state 66


State 43

   33 expression: else_start EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 67


State 44

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   37           | expression PLUS . expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 68
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 45

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   38           | expression MINUS . expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 69
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 46

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   39           | expression ASTERISK . expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 70
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 47

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   40           | expression SLASH . expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 71
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 48

   48 access: expression DOT_IDENTIFIER .

    $default  reduce using rule 48 (access)


State 49

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   43           | expression OP_EQUAL . expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 72
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 50

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   44           | expression OP_NOT_EQUAL . expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 73
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 51

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   41           | expression OP_AND . expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 74
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 52

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   42           | expression OP_OR . expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 75
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 53

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   50                | access EQUAL . expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 76
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 54

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   58     | access LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   59     | access LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 3
    RIGHT_PARENTHESIS  shift, and go to state 77
    LEFT_CURLY_BRACE   shift, and go to state 4
    IF                 shift, and go to state 5
    ELSE               shift, and go to state 6
    FOR                shift, and go to state 7
    INT_LITERAL        shift, and go to state 8
    FLOAT_LITERAL      shift, and go to state 9
    STRING_LITERAL     shift, and go to state 10

    expressions      go to state 78
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 33
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 55

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER
   49 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 49 (assign_variable)

    Conflict between rule 49 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 49 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 49 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 49 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 49 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).
    Conflict between rule 49 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 49 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 49 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 49 and token OP_OR resolved as shift (EQUAL < OP_OR).


State 56

   57 call: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (call)


State 57

   29 expressions: expressions . COMMA expression
   56 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 58
    RIGHT_PARENTHESIS  shift, and go to state 79


State 58

   29 expressions: expressions COMMA . expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 80
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 59

   47 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE .

    $default  reduce using rule 47 (list)


State 60

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA . expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 81
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 61

   26 definition_arguments: IDENTIFIER .

    $default  reduce using rule 26 (definition_arguments)


State 62

   25 arguments: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 25 (arguments)


State 63

   24 arguments: LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS
   27 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 82
    RIGHT_PARENTHESIS  shift, and go to state 83


State 64

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   11                    | function_start arguments EOL . lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    lines                go to state 84
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 65

   13 class_definition: class_start arguments EOL . members_definition methods
   14                 | class_start arguments EOL . members_definition
   15                 | class_start arguments EOL . methods
   17 methods: . method_definition EOL
   18        | . methods method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   20 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   21                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 85
    MEMBER_IDENTIFIER  shift, and go to state 86

    methods             go to state 87
    method_definition   go to state 88
    members_definition  go to state 89


State 66

   32 expression: if_start expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 90


State 67

   33 expression: else_start EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 91


State 68

   37 expression: expression . PLUS expression
   37           | expression PLUS expression .  ["end of file", PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 37 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 37 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 37 and token SLASH resolved as shift (PLUS < SLASH).
    Conflict between rule 37 and token DOT_IDENTIFIER resolved as shift (PLUS < DOT_IDENTIFIER).
    Conflict between rule 37 and token OP_EQUAL resolved as shift (PLUS < OP_EQUAL).
    Conflict between rule 37 and token OP_NOT_EQUAL resolved as shift (PLUS < OP_NOT_EQUAL).
    Conflict between rule 37 and token OP_AND resolved as shift (PLUS < OP_AND).
    Conflict between rule 37 and token OP_OR resolved as shift (PLUS < OP_OR).


State 69

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   38           | expression MINUS expression .  ["end of file", PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 38 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 38 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 38 and token SLASH resolved as shift (MINUS < SLASH).
    Conflict between rule 38 and token DOT_IDENTIFIER resolved as shift (MINUS < DOT_IDENTIFIER).
    Conflict between rule 38 and token OP_EQUAL resolved as shift (MINUS < OP_EQUAL).
    Conflict between rule 38 and token OP_NOT_EQUAL resolved as shift (MINUS < OP_NOT_EQUAL).
    Conflict between rule 38 and token OP_AND resolved as shift (MINUS < OP_AND).
    Conflict between rule 38 and token OP_OR resolved as shift (MINUS < OP_OR).


State 70

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   39           | expression ASTERISK expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 39 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 39 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 39 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 39 and token DOT_IDENTIFIER resolved as shift (ASTERISK < DOT_IDENTIFIER).
    Conflict between rule 39 and token OP_EQUAL resolved as shift (ASTERISK < OP_EQUAL).
    Conflict between rule 39 and token OP_NOT_EQUAL resolved as shift (ASTERISK < OP_NOT_EQUAL).
    Conflict between rule 39 and token OP_AND resolved as shift (ASTERISK < OP_AND).
    Conflict between rule 39 and token OP_OR resolved as shift (ASTERISK < OP_OR).


State 71

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   40           | expression SLASH expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 40 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 40 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 40 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 40 and token DOT_IDENTIFIER resolved as shift (SLASH < DOT_IDENTIFIER).
    Conflict between rule 40 and token OP_EQUAL resolved as shift (SLASH < OP_EQUAL).
    Conflict between rule 40 and token OP_NOT_EQUAL resolved as shift (SLASH < OP_NOT_EQUAL).
    Conflict between rule 40 and token OP_AND resolved as shift (SLASH < OP_AND).
    Conflict between rule 40 and token OP_OR resolved as shift (SLASH < OP_OR).


State 72

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   43           | expression OP_EQUAL expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    OP_AND  shift, and go to state 51
    OP_OR   shift, and go to state 52

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token PLUS resolved as reduce (PLUS < OP_EQUAL).
    Conflict between rule 43 and token MINUS resolved as reduce (MINUS < OP_EQUAL).
    Conflict between rule 43 and token ASTERISK resolved as reduce (ASTERISK < OP_EQUAL).
    Conflict between rule 43 and token SLASH resolved as reduce (SLASH < OP_EQUAL).
    Conflict between rule 43 and token DOT_IDENTIFIER resolved as reduce (DOT_IDENTIFIER < OP_EQUAL).
    Conflict between rule 43 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 43 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 43 and token OP_AND resolved as shift (OP_EQUAL < OP_AND).
    Conflict between rule 43 and token OP_OR resolved as shift (OP_EQUAL < OP_OR).


State 73

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   44           | expression OP_NOT_EQUAL expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   48 access: expression . DOT_IDENTIFIER

    OP_AND  shift, and go to state 51
    OP_OR   shift, and go to state 52

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token PLUS resolved as reduce (PLUS < OP_NOT_EQUAL).
    Conflict between rule 44 and token MINUS resolved as reduce (MINUS < OP_NOT_EQUAL).
    Conflict between rule 44 and token ASTERISK resolved as reduce (ASTERISK < OP_NOT_EQUAL).
    Conflict between rule 44 and token SLASH resolved as reduce (SLASH < OP_NOT_EQUAL).
    Conflict between rule 44 and token DOT_IDENTIFIER resolved as reduce (DOT_IDENTIFIER < OP_NOT_EQUAL).
    Conflict between rule 44 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 44 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 44 and token OP_AND resolved as shift (OP_NOT_EQUAL < OP_AND).
    Conflict between rule 44 and token OP_OR resolved as shift (OP_NOT_EQUAL < OP_OR).


State 74

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   41           | expression OP_AND expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token PLUS resolved as reduce (PLUS < OP_AND).
    Conflict between rule 41 and token MINUS resolved as reduce (MINUS < OP_AND).
    Conflict between rule 41 and token ASTERISK resolved as reduce (ASTERISK < OP_AND).
    Conflict between rule 41 and token SLASH resolved as reduce (SLASH < OP_AND).
    Conflict between rule 41 and token DOT_IDENTIFIER resolved as reduce (DOT_IDENTIFIER < OP_AND).
    Conflict between rule 41 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 41 and token OP_OR resolved as reduce (%left OP_OR).


State 75

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   42           | expression OP_OR expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, OP_EQUAL, OP_NOT_EQUAL, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token PLUS resolved as reduce (PLUS < OP_OR).
    Conflict between rule 42 and token MINUS resolved as reduce (MINUS < OP_OR).
    Conflict between rule 42 and token ASTERISK resolved as reduce (ASTERISK < OP_OR).
    Conflict between rule 42 and token SLASH resolved as reduce (SLASH < OP_OR).
    Conflict between rule 42 and token DOT_IDENTIFIER resolved as reduce (DOT_IDENTIFIER < OP_OR).
    Conflict between rule 42 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 42 and token OP_OR resolved as reduce (%left OP_OR).


State 76

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER
   50 assign_variable: access EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 50 (assign_variable)

    Conflict between rule 50 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 50 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 50 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 50 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 50 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).
    Conflict between rule 50 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 50 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 50 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 50 and token OP_OR resolved as shift (EQUAL < OP_OR).


State 77

   59 call: access LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 59 (call)


State 78

   29 expressions: expressions . COMMA expression
   58 call: access LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 58
    RIGHT_PARENTHESIS  shift, and go to state 92


State 79

   56 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (call)


State 80

   29 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 29 (expressions)


State 81

   34 expression: FOR expression COMMA expression . COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    COMMA           shift, and go to state 93


State 82

   27 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 94


State 83

   24 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 24 (arguments)


State 84

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   11                    | function_start arguments EOL lines . return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   22 return_value: . RETURN expression
   23             | . RETURN
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 95
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    line                 go to state 36
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    return_value         go to state 96
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 85

   19 method_definition: METHOD_DEFINITION . arguments EOL lines return_value
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 39

    arguments  go to state 97


State 86

   20 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 98


State 87

   15 class_definition: class_start arguments EOL methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   18 methods: methods . method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 85

    $default  reduce using rule 15 (class_definition)

    method_definition  go to state 99


State 88

   17 methods: method_definition . EOL

    EOL  shift, and go to state 100


State 89

   13 class_definition: class_start arguments EOL members_definition . methods
   14                 | class_start arguments EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   17 methods: . method_definition EOL
   18        | . methods method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   21 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 85
    MEMBER_IDENTIFIER  shift, and go to state 101

    $default  reduce using rule 14 (class_definition)

    methods            go to state 102
    method_definition  go to state 88


State 90

   32 expression: if_start expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 103


State 91

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | else_start EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 104
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 92

   58 call: access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (call)


State 93

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 105
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 94

   27 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 27 (definition_arguments)


State 95

   22 return_value: RETURN . expression
   23             | RETURN .  [EOL]
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    $default  reduce using rule 23 (return_value)

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 106
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 96

   11 function_definition: function_start arguments EOL lines return_value . EOL

    EOL  shift, and go to state 107


State 97

   19 method_definition: METHOD_DEFINITION arguments . EOL lines return_value

    EOL  shift, and go to state 108


State 98

   20 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 109
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 99

   18 methods: methods method_definition . EOL

    EOL  shift, and go to state 110


State 100

   17 methods: method_definition EOL .

    $default  reduce using rule 17 (methods)


State 101

   21 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 111


State 102

   13 class_definition: class_start arguments EOL members_definition methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   18 methods: methods . method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 85

    $default  reduce using rule 13 (class_definition)

    method_definition  go to state 99


State 103

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   32           | if_start expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 112
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 104

   33 expression: else_start EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 113


State 105

   34 expression: FOR expression COMMA expression COMMA expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    EOL             shift, and go to state 114


State 106

   22 return_value: RETURN expression .  [EOL]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52

    $default  reduce using rule 22 (return_value)


State 107

   11 function_definition: function_start arguments EOL lines return_value EOL .

    $default  reduce using rule 11 (function_definition)


State 108

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   19 method_definition: METHOD_DEFINITION arguments EOL . lines return_value
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    lines                go to state 115
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 109

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    EOL             shift, and go to state 116


State 110

   18 methods: methods method_definition EOL .

    $default  reduce using rule 18 (methods)


State 111

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 117
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 112

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 118


State 113

   33 expression: else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 33 (expression)


State 114

   34 expression: FOR expression COMMA expression COMMA expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 119


State 115

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   19 method_definition: METHOD_DEFINITION arguments EOL lines . return_value
   22 return_value: . RETURN expression
   23             | . RETURN
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 95
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    line                 go to state 36
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    return_value         go to state 120
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 116

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 20 (members_definition)


State 117

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_EQUAL expression
   44           | expression . OP_NOT_EQUAL expression
   48 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 44
    MINUS           shift, and go to state 45
    ASTERISK        shift, and go to state 46
    SLASH           shift, and go to state 47
    DOT_IDENTIFIER  shift, and go to state 48
    OP_EQUAL        shift, and go to state 49
    OP_NOT_EQUAL    shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    EOL             shift, and go to state 121


State 118

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 32 (expression)


State 119

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 122


State 120

   19 method_definition: METHOD_DEFINITION arguments EOL lines return_value .

    $default  reduce using rule 19 (method_definition)


State 121

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 21 (members_definition)


State 122

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_EQUAL expression
   44           | . expression OP_NOT_EQUAL expression
   45           | . list
   46           | . access
   47 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   48 access: . expression DOT_IDENTIFIER
   49 assign_variable: . IDENTIFIER EQUAL expression
   50                | . access EQUAL expression
   51 monomial: . call
   52         | . STRING_LITERAL
   53         | . FLOAT_LITERAL
   54         | . INT_LITERAL
   55         | . variable
   56 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   57     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   58     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   59     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   60 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 123
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 123

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 124


State 124

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 34 (expression)

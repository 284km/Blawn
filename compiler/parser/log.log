Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   LEFT_BRACKET
   RIGHT_BRACKET
   IN
   WHILE


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"
    7     | definition

    8 line_content: expression

    9 definition: function_definition
   10           | class_definition
   11           | c_type_definition
   12           | globals_definition
   13           | c_function_declaration

   14 function_definition: function_start arguments EOL block return_value EOL

   15 function_start: FUNCTION_DEFINITION

   16 class_definition: class_start arguments EOL members_definition methods
   17                 | class_start arguments EOL members_definition
   18                 | class_start arguments EOL methods

   19 class_start: CLASS_DEFINITION

   20 c_type_definition: c_type_start EOL C_members_definition

   21 c_type_start: C_TYPE_DEFINITION

   22 methods: method_definition EOL
   23        | methods method_definition EOL

   24 method_definition: METHOD_DEFINITION arguments EOL block return_value

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier EOL
   28                     | C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

   29 C_type_identifier: IDENTIFIER
   30                  | C_type_identifier IDENTIFIER

   31 C_arguments: C_type_identifier
   32            | C_arguments COMMA C_type_identifier

   33 C_returns: C_type_identifier

   34 return_value: RETURN expression
   35             | RETURN

   36 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   37          | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   38 definition_arguments: IDENTIFIER
   39                     | definition_arguments COMMA IDENTIFIER

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

   41 global_start: GLOBAL

   42 globals_variables: assign_variable
   43                  | globals_variables EOL assign_variable

   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL

   46 expressions: expression
   47            | expressions COMMA expression

   48 if_start: IF

   49 else_start: ELSE

   50 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | assign_variable
   54           | expression PLUS expression
   55           | expression MINUS expression
   56           | expression ASTERISK expression
   57           | expression SLASH expression
   58           | expression OP_AND expression
   59           | expression OP_OR expression
   60           | expression OP_MORE_EQUAL expression
   61           | expression OP_LESS_EQUAL expression
   62           | expression OP_MORE expression
   63           | expression OP_LESS expression
   64           | expression OP_NOT_EQUAL expression
   65           | expression OP_EQUAL expression
   66           | monomial
   67           | list
   68           | access

   69 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

   71 access: expression DOT_IDENTIFIER

   72 assign_variable: IDENTIFIER EQUAL expression
   73                | access EQUAL expression

   74 monomial: call
   75         | STRING_LITERAL
   76         | FLOAT_LITERAL
   77         | INT_LITERAL
   78         | variable

   79 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | access LEFT_PARENTHESIS RIGHT_PARENTHESIS

   83 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 15
METHOD_DEFINITION (259) 24
CLASS_DEFINITION (260) 19
C_TYPE_DEFINITION (261) 21
C_FUNCTION_DECLARATION (262) 44 45
RETURN (263) 34 35
C_FUNCTION (264)
MEMBER_IDENTIFIER (265) 25 26 27 28
IDENTIFIER (266) 29 30 38 39 72 79 80 83
EQUAL (267) 25 26 27 28 72 73
OP_AND (268) 58
OP_OR (269) 59
OP_EQUAL (270) 65
OP_NOT_EQUAL (271) 64
OP_MORE_EQUAL (272) 60
OP_LESS_EQUAL (273) 61
OP_MORE (274) 62
OP_LESS (275) 63
PLUS (276) 54
MINUS (277) 55
ASTERISK (278) 56
SLASH (279) 57
DOT_IDENTIFIER (280) 71
USE (281)
COLON (282)
SEMICOLON (283)
COMMA (284) 32 39 47 52
LEFT_PARENTHESIS (285) 36 37 40 50 51 52 79 80 81 82
RIGHT_PARENTHESIS (286) 36 37 40 50 51 52 79 80 81 82
LEFT_CURLY_BRACE (287) 69 70
RIGHT_CURLY_BRACE (288) 69 70
LEFT_BRACKET (289)
RIGHT_BRACKET (290)
IF (291) 48
ELSE (292) 49
FOR (293) 52
IN (294)
WHILE (295)
GLOBAL (296) 41
C_FUNCTION_ARGUMENT (297) 44 45
C_FUNCTION_RETURN (298) 44 45
EOL (299) 5 14 16 17 18 20 22 23 24 25 26 27 28 40 43 44 45 50 51 52
INT_LITERAL (300) 77
FLOAT_LITERAL (301) 76
STRING_LITERAL (302) 75


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
block (50)
    on left: 2, on right: 1 14 24 50 51 52
lines (51)
    on left: 3 4, on right: 2 4
line (52)
    on left: 5 6 7, on right: 3 4
line_content (53)
    on left: 8, on right: 5 6
definition (54)
    on left: 9 10 11 12 13, on right: 7
function_definition (55)
    on left: 14, on right: 9
function_start (56)
    on left: 15, on right: 14
class_definition (57)
    on left: 16 17 18, on right: 10
class_start (58)
    on left: 19, on right: 16 17 18
c_type_definition (59)
    on left: 20, on right: 11
c_type_start (60)
    on left: 21, on right: 20
methods (61)
    on left: 22 23, on right: 16 18 23
method_definition (62)
    on left: 24, on right: 22 23
members_definition (63)
    on left: 25 26, on right: 16 17 26
C_members_definition (64)
    on left: 27 28, on right: 20 28
C_type_identifier (65)
    on left: 29 30, on right: 27 28 30 31 32 33
C_arguments (66)
    on left: 31 32, on right: 32 44
C_returns (67)
    on left: 33, on right: 44 45
return_value (68)
    on left: 34 35, on right: 14 24
arguments (69)
    on left: 36 37, on right: 14 16 17 18 24
definition_arguments (70)
    on left: 38 39, on right: 36 39
globals_definition (71)
    on left: 40, on right: 12
global_start (72)
    on left: 41, on right: 40
globals_variables (73)
    on left: 42 43, on right: 40 43
c_function_declaration (74)
    on left: 44 45, on right: 13
expressions (75)
    on left: 46 47, on right: 47 69 79 81
if_start (76)
    on left: 48, on right: 50
else_start (77)
    on left: 49, on right: 51
expression (78)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68, on right: 8 25 26 34 46 47 50 52 54 55 56 57 58 59 60 61 62
    63 64 65 71 72 73
list (79)
    on left: 69 70, on right: 67
access (80)
    on left: 71, on right: 68 73 81 82
assign_variable (81)
    on left: 72 73, on right: 42 43 53
monomial (82)
    on left: 74 75 76 77 78, on right: 66
call (83)
    on left: 79 80 81 82, on right: 74
variable (84)
    on left: 83, on right: 78


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    program                 go to state 14
    block                   go to state 15
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 1

   15 function_start: FUNCTION_DEFINITION .

    $default  reduce using rule 15 (function_start)


State 2

   19 class_start: CLASS_DEFINITION .

    $default  reduce using rule 19 (class_start)


State 3

   21 c_type_start: C_TYPE_DEFINITION .

    $default  reduce using rule 21 (c_type_start)


State 4

   44 c_function_declaration: C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL

    EOL  shift, and go to state 38


State 5

   72 assign_variable: IDENTIFIER . EQUAL expression
   79 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: IDENTIFIER .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    EQUAL             shift, and go to state 39
    LEFT_PARENTHESIS  shift, and go to state 40

    $default  reduce using rule 83 (variable)


State 6

   46 expressions: . expression
   47            | . expressions COMMA expression
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   69     | LEFT_CURLY_BRACE . expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   70     | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    LEFT_CURLY_BRACE   shift, and go to state 6
    RIGHT_CURLY_BRACE  shift, and go to state 41
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 42
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 7

   48 if_start: IF .

    $default  reduce using rule 48 (if_start)


State 8

   49 else_start: ELSE .

    $default  reduce using rule 49 (else_start)


State 9

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | FOR . expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 44
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 10

   41 global_start: GLOBAL .

    $default  reduce using rule 41 (global_start)


State 11

   77 monomial: INT_LITERAL .

    $default  reduce using rule 77 (monomial)


State 12

   76 monomial: FLOAT_LITERAL .

    $default  reduce using rule 76 (monomial)


State 13

   75 monomial: STRING_LITERAL .

    $default  reduce using rule 75 (monomial)


State 14

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 45


State 15

    1 program: block .

    $default  reduce using rule 1 (program)


State 16

    2 block: lines .  ["end of file", RETURN, RIGHT_PARENTHESIS]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    $default  reduce using rule 2 (block)

    line                    go to state 46
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 17

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 18

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 47
    EOL            shift, and go to state 48


State 19

    7 line: definition .

    $default  reduce using rule 7 (line)


State 20

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 21

   14 function_definition: function_start . arguments EOL block return_value EOL
   36 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   37          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 50


State 22

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 23

   16 class_definition: class_start . arguments EOL members_definition methods
   17                 | class_start . arguments EOL members_definition
   18                 | class_start . arguments EOL methods
   36 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   37          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 51


State 24

   11 definition: c_type_definition .

    $default  reduce using rule 11 (definition)


State 25

   20 c_type_definition: c_type_start . EOL C_members_definition

    EOL  shift, and go to state 52


State 26

   12 definition: globals_definition .

    $default  reduce using rule 12 (definition)


State 27

   40 globals_definition: global_start . EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 53


State 28

   13 definition: c_function_declaration .

    $default  reduce using rule 13 (definition)


State 29

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | if_start . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 54
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 30

   51 expression: else_start . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 55


State 31

    8 line_content: expression .  ["end of file", EOL]
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 8 (line_content)


State 32

   67 expression: list .

    $default  reduce using rule 67 (expression)


State 33

   68 expression: access .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   73 assign_variable: access . EQUAL expression
   81 call: access . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | access . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    EQUAL             shift, and go to state 69
    LEFT_PARENTHESIS  shift, and go to state 70

    $default  reduce using rule 68 (expression)


State 34

   53 expression: assign_variable .

    $default  reduce using rule 53 (expression)


State 35

   66 expression: monomial .

    $default  reduce using rule 66 (expression)


State 36

   74 monomial: call .

    $default  reduce using rule 74 (monomial)


State 37

   78 monomial: variable .

    $default  reduce using rule 78 (monomial)


State 38

   44 c_function_declaration: C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL

    C_FUNCTION_ARGUMENT  shift, and go to state 71


State 39

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   72                | IDENTIFIER EQUAL . expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 72
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 40

   46 expressions: . expression
   47            | . expressions COMMA expression
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80     | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 73
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 74
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 41

   70 list: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 70 (list)


State 42

   47 expressions: expressions . COMMA expression
   69 list: LEFT_CURLY_BRACE expressions . RIGHT_CURLY_BRACE

    COMMA              shift, and go to state 75
    RIGHT_CURLY_BRACE  shift, and go to state 76


State 43

   46 expressions: expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 46 (expressions)


State 44

   52 expression: FOR expression . COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 77


State 45

    0 $accept: program "end of file" .

    $default  accept


State 46

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 47

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 48

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 49

   36 arguments: LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS
   37          | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   38 definition_arguments: . IDENTIFIER
   39                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER         shift, and go to state 78
    RIGHT_PARENTHESIS  shift, and go to state 79

    definition_arguments  go to state 80


State 50

   14 function_definition: function_start arguments . EOL block return_value EOL

    EOL  shift, and go to state 81


State 51

   16 class_definition: class_start arguments . EOL members_definition methods
   17                 | class_start arguments . EOL members_definition
   18                 | class_start arguments . EOL methods

    EOL  shift, and go to state 82


State 52

   20 c_type_definition: c_type_start EOL . C_members_definition
   27 C_members_definition: . MEMBER_IDENTIFIER EQUAL C_type_identifier EOL
   28                     | . C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

    MEMBER_IDENTIFIER  shift, and go to state 83

    C_members_definition  go to state 84


State 53

   40 globals_definition: global_start EOL . LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    LEFT_PARENTHESIS  shift, and go to state 85


State 54

   50 expression: if_start expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 86


State 55

   51 expression: else_start EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 87


State 56

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   58           | expression OP_AND . expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 88
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 57

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   59           | expression OP_OR . expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 89
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 58

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   65           | expression OP_EQUAL . expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 90
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 59

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   64           | expression OP_NOT_EQUAL . expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 91
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 60

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   60           | expression OP_MORE_EQUAL . expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 92
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 61

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   61           | expression OP_LESS_EQUAL . expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 93
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 62

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   62           | expression OP_MORE . expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 94
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 63

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   63           | expression OP_LESS . expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 95
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 64

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   54           | expression PLUS . expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 96
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 65

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   55           | expression MINUS . expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 97
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 66

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   56           | expression ASTERISK . expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 98
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 67

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   57           | expression SLASH . expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 99
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 68

   71 access: expression DOT_IDENTIFIER .

    $default  reduce using rule 71 (access)


State 69

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   73                | access EQUAL . expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 100
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 70

   46 expressions: . expression
   47            | . expressions COMMA expression
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   81     | access LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   82     | access LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 101
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 102
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 71

   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER
   31 C_arguments: . C_type_identifier
   32            | . C_arguments COMMA C_type_identifier
   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . EOL C_FUNCTION_RETURN C_returns EOL

    IDENTIFIER  shift, and go to state 103
    EOL         shift, and go to state 104

    C_type_identifier  go to state 105
    C_arguments        go to state 106


State 72

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER
   72 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 72 (assign_variable)

    Conflict between rule 72 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 72 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 72 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 72 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 72 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 72 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 72 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 72 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 72 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 72 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 72 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 72 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 72 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 73

   80 call: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 80 (call)


State 74

   47 expressions: expressions . COMMA expression
   79 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 107


State 75

   47 expressions: expressions COMMA . expression
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 108
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 76

   69 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE .

    $default  reduce using rule 69 (list)


State 77

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | FOR expression COMMA . expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 109
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 78

   38 definition_arguments: IDENTIFIER .

    $default  reduce using rule 38 (definition_arguments)


State 79

   37 arguments: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 37 (arguments)


State 80

   36 arguments: LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS
   39 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 110
    RIGHT_PARENTHESIS  shift, and go to state 111


State 81

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   14                    | function_start arguments EOL . block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 112
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 82

   16 class_definition: class_start arguments EOL . members_definition methods
   17                 | class_start arguments EOL . members_definition
   18                 | class_start arguments EOL . methods
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value
   25 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 113
    MEMBER_IDENTIFIER  shift, and go to state 114

    methods             go to state 115
    method_definition   go to state 116
    members_definition  go to state 117


State 83

   27 C_members_definition: MEMBER_IDENTIFIER . EQUAL C_type_identifier EOL

    EQUAL  shift, and go to state 118


State 84

   20 c_type_definition: c_type_start EOL C_members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   28 C_members_definition: C_members_definition . MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

    MEMBER_IDENTIFIER  shift, and go to state 119

    $default  reduce using rule 20 (c_type_definition)


State 85

   40 globals_definition: global_start EOL LEFT_PARENTHESIS . EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 120


State 86

   50 expression: if_start expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 121


State 87

   51 expression: else_start EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 122


State 88

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   58           | expression OP_AND expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 58 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 58 and token OP_EQUAL resolved as shift (OP_AND < OP_EQUAL).
    Conflict between rule 58 and token OP_NOT_EQUAL resolved as shift (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 58 and token OP_MORE_EQUAL resolved as shift (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 58 and token OP_LESS_EQUAL resolved as shift (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 58 and token OP_MORE resolved as shift (OP_AND < OP_MORE).
    Conflict between rule 58 and token OP_LESS resolved as shift (OP_AND < OP_LESS).
    Conflict between rule 58 and token PLUS resolved as shift (OP_AND < PLUS).
    Conflict between rule 58 and token MINUS resolved as shift (OP_AND < MINUS).
    Conflict between rule 58 and token ASTERISK resolved as shift (OP_AND < ASTERISK).
    Conflict between rule 58 and token SLASH resolved as shift (OP_AND < SLASH).
    Conflict between rule 58 and token DOT_IDENTIFIER resolved as shift (OP_AND < DOT_IDENTIFIER).


State 89

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   59           | expression OP_OR expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 59 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 59 and token OP_EQUAL resolved as shift (OP_OR < OP_EQUAL).
    Conflict between rule 59 and token OP_NOT_EQUAL resolved as shift (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 59 and token OP_MORE_EQUAL resolved as shift (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 59 and token OP_LESS_EQUAL resolved as shift (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 59 and token OP_MORE resolved as shift (OP_OR < OP_MORE).
    Conflict between rule 59 and token OP_LESS resolved as shift (OP_OR < OP_LESS).
    Conflict between rule 59 and token PLUS resolved as shift (OP_OR < PLUS).
    Conflict between rule 59 and token MINUS resolved as shift (OP_OR < MINUS).
    Conflict between rule 59 and token ASTERISK resolved as shift (OP_OR < ASTERISK).
    Conflict between rule 59 and token SLASH resolved as shift (OP_OR < SLASH).
    Conflict between rule 59 and token DOT_IDENTIFIER resolved as shift (OP_OR < DOT_IDENTIFIER).


State 90

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   65           | expression OP_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 65 (expression)

    Conflict between rule 65 and token OP_AND resolved as reduce (OP_AND < OP_EQUAL).
    Conflict between rule 65 and token OP_OR resolved as reduce (OP_OR < OP_EQUAL).
    Conflict between rule 65 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 65 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 65 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 65 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 65 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 65 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 65 and token PLUS resolved as shift (OP_EQUAL < PLUS).
    Conflict between rule 65 and token MINUS resolved as shift (OP_EQUAL < MINUS).
    Conflict between rule 65 and token ASTERISK resolved as shift (OP_EQUAL < ASTERISK).
    Conflict between rule 65 and token SLASH resolved as shift (OP_EQUAL < SLASH).
    Conflict between rule 65 and token DOT_IDENTIFIER resolved as shift (OP_EQUAL < DOT_IDENTIFIER).


State 91

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   64           | expression OP_NOT_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token OP_AND resolved as reduce (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 64 and token OP_OR resolved as reduce (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 64 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 64 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 64 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 64 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 64 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 64 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 64 and token PLUS resolved as shift (OP_NOT_EQUAL < PLUS).
    Conflict between rule 64 and token MINUS resolved as shift (OP_NOT_EQUAL < MINUS).
    Conflict between rule 64 and token ASTERISK resolved as shift (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 64 and token SLASH resolved as shift (OP_NOT_EQUAL < SLASH).
    Conflict between rule 64 and token DOT_IDENTIFIER resolved as shift (OP_NOT_EQUAL < DOT_IDENTIFIER).


State 92

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   60           | expression OP_MORE_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token OP_AND resolved as reduce (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 60 and token OP_OR resolved as reduce (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 60 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 60 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 60 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 60 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 60 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 60 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 60 and token PLUS resolved as shift (OP_MORE_EQUAL < PLUS).
    Conflict between rule 60 and token MINUS resolved as shift (OP_MORE_EQUAL < MINUS).
    Conflict between rule 60 and token ASTERISK resolved as shift (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 60 and token SLASH resolved as shift (OP_MORE_EQUAL < SLASH).
    Conflict between rule 60 and token DOT_IDENTIFIER resolved as shift (OP_MORE_EQUAL < DOT_IDENTIFIER).


State 93

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   61           | expression OP_LESS_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 61 (expression)

    Conflict between rule 61 and token OP_AND resolved as reduce (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 61 and token OP_OR resolved as reduce (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 61 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 61 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 61 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 61 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 61 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 61 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 61 and token PLUS resolved as shift (OP_LESS_EQUAL < PLUS).
    Conflict between rule 61 and token MINUS resolved as shift (OP_LESS_EQUAL < MINUS).
    Conflict between rule 61 and token ASTERISK resolved as shift (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 61 and token SLASH resolved as shift (OP_LESS_EQUAL < SLASH).
    Conflict between rule 61 and token DOT_IDENTIFIER resolved as shift (OP_LESS_EQUAL < DOT_IDENTIFIER).


State 94

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   62           | expression OP_MORE expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token OP_AND resolved as reduce (OP_AND < OP_MORE).
    Conflict between rule 62 and token OP_OR resolved as reduce (OP_OR < OP_MORE).
    Conflict between rule 62 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 62 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 62 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 62 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 62 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 62 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 62 and token PLUS resolved as shift (OP_MORE < PLUS).
    Conflict between rule 62 and token MINUS resolved as shift (OP_MORE < MINUS).
    Conflict between rule 62 and token ASTERISK resolved as shift (OP_MORE < ASTERISK).
    Conflict between rule 62 and token SLASH resolved as shift (OP_MORE < SLASH).
    Conflict between rule 62 and token DOT_IDENTIFIER resolved as shift (OP_MORE < DOT_IDENTIFIER).


State 95

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   63           | expression OP_LESS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token OP_AND resolved as reduce (OP_AND < OP_LESS).
    Conflict between rule 63 and token OP_OR resolved as reduce (OP_OR < OP_LESS).
    Conflict between rule 63 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 63 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 63 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 63 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 63 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 63 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 63 and token PLUS resolved as shift (OP_LESS < PLUS).
    Conflict between rule 63 and token MINUS resolved as shift (OP_LESS < MINUS).
    Conflict between rule 63 and token ASTERISK resolved as shift (OP_LESS < ASTERISK).
    Conflict between rule 63 and token SLASH resolved as shift (OP_LESS < SLASH).
    Conflict between rule 63 and token DOT_IDENTIFIER resolved as shift (OP_LESS < DOT_IDENTIFIER).


State 96

   54 expression: expression . PLUS expression
   54           | expression PLUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token OP_AND resolved as reduce (OP_AND < PLUS).
    Conflict between rule 54 and token OP_OR resolved as reduce (OP_OR < PLUS).
    Conflict between rule 54 and token OP_EQUAL resolved as reduce (OP_EQUAL < PLUS).
    Conflict between rule 54 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < PLUS).
    Conflict between rule 54 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < PLUS).
    Conflict between rule 54 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < PLUS).
    Conflict between rule 54 and token OP_MORE resolved as reduce (OP_MORE < PLUS).
    Conflict between rule 54 and token OP_LESS resolved as reduce (OP_LESS < PLUS).
    Conflict between rule 54 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 54 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 54 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 54 and token SLASH resolved as shift (PLUS < SLASH).
    Conflict between rule 54 and token DOT_IDENTIFIER resolved as shift (PLUS < DOT_IDENTIFIER).


State 97

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   55           | expression MINUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token OP_AND resolved as reduce (OP_AND < MINUS).
    Conflict between rule 55 and token OP_OR resolved as reduce (OP_OR < MINUS).
    Conflict between rule 55 and token OP_EQUAL resolved as reduce (OP_EQUAL < MINUS).
    Conflict between rule 55 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < MINUS).
    Conflict between rule 55 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < MINUS).
    Conflict between rule 55 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < MINUS).
    Conflict between rule 55 and token OP_MORE resolved as reduce (OP_MORE < MINUS).
    Conflict between rule 55 and token OP_LESS resolved as reduce (OP_LESS < MINUS).
    Conflict between rule 55 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 55 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 55 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 55 and token SLASH resolved as shift (MINUS < SLASH).
    Conflict between rule 55 and token DOT_IDENTIFIER resolved as shift (MINUS < DOT_IDENTIFIER).


State 98

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   56           | expression ASTERISK expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token OP_AND resolved as reduce (OP_AND < ASTERISK).
    Conflict between rule 56 and token OP_OR resolved as reduce (OP_OR < ASTERISK).
    Conflict between rule 56 and token OP_EQUAL resolved as reduce (OP_EQUAL < ASTERISK).
    Conflict between rule 56 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 56 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 56 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 56 and token OP_MORE resolved as reduce (OP_MORE < ASTERISK).
    Conflict between rule 56 and token OP_LESS resolved as reduce (OP_LESS < ASTERISK).
    Conflict between rule 56 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 56 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 56 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 56 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 56 and token DOT_IDENTIFIER resolved as shift (ASTERISK < DOT_IDENTIFIER).


State 99

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   57           | expression SLASH expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token OP_AND resolved as reduce (OP_AND < SLASH).
    Conflict between rule 57 and token OP_OR resolved as reduce (OP_OR < SLASH).
    Conflict between rule 57 and token OP_EQUAL resolved as reduce (OP_EQUAL < SLASH).
    Conflict between rule 57 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < SLASH).
    Conflict between rule 57 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < SLASH).
    Conflict between rule 57 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < SLASH).
    Conflict between rule 57 and token OP_MORE resolved as reduce (OP_MORE < SLASH).
    Conflict between rule 57 and token OP_LESS resolved as reduce (OP_LESS < SLASH).
    Conflict between rule 57 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 57 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 57 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 57 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 57 and token DOT_IDENTIFIER resolved as shift (SLASH < DOT_IDENTIFIER).


State 100

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER
   73 assign_variable: access EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 73 (assign_variable)

    Conflict between rule 73 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 73 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 73 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 73 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 73 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 73 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 73 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 73 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 73 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 73 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 73 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 73 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 73 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 101

   82 call: access LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 82 (call)


State 102

   47 expressions: expressions . COMMA expression
   81 call: access LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 123


State 103

   29 C_type_identifier: IDENTIFIER .

    $default  reduce using rule 29 (C_type_identifier)


State 104

   45 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL . C_FUNCTION_RETURN C_returns EOL

    C_FUNCTION_RETURN  shift, and go to state 124


State 105

   30 C_type_identifier: C_type_identifier . IDENTIFIER
   31 C_arguments: C_type_identifier .  [COMMA, EOL]

    IDENTIFIER  shift, and go to state 125

    $default  reduce using rule 31 (C_arguments)


State 106

   32 C_arguments: C_arguments . COMMA C_type_identifier
   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments . EOL C_FUNCTION_RETURN C_returns EOL

    COMMA  shift, and go to state 126
    EOL    shift, and go to state 127


State 107

   79 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 79 (call)


State 108

   47 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 47 (expressions)


State 109

   52 expression: FOR expression COMMA expression . COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 128


State 110

   39 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 129


State 111

   36 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 36 (arguments)


State 112

   14 function_definition: function_start arguments EOL block . return_value EOL
   34 return_value: . RETURN expression
   35             | . RETURN

    RETURN  shift, and go to state 130

    return_value  go to state 131


State 113

   24 method_definition: METHOD_DEFINITION . arguments EOL block return_value
   36 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   37          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 132


State 114

   25 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 133


State 115

   18 class_definition: class_start arguments EOL methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value

    METHOD_DEFINITION  shift, and go to state 113

    $default  reduce using rule 18 (class_definition)

    method_definition  go to state 134


State 116

   22 methods: method_definition . EOL

    EOL  shift, and go to state 135


State 117

   16 class_definition: class_start arguments EOL members_definition . methods
   17                 | class_start arguments EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value
   26 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 113
    MEMBER_IDENTIFIER  shift, and go to state 136

    $default  reduce using rule 17 (class_definition)

    methods            go to state 137
    method_definition  go to state 116


State 118

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL . C_type_identifier EOL
   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER

    IDENTIFIER  shift, and go to state 103

    C_type_identifier  go to state 138


State 119

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER . EQUAL C_type_identifier EOL

    EQUAL  shift, and go to state 139


State 120

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL . globals_variables EOL RIGHT_PARENTHESIS EOL
   42 globals_variables: . assign_variable
   43                  | . globals_variables EOL assign_variable
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    globals_variables  go to state 140
    if_start           go to state 29
    else_start         go to state 30
    expression         go to state 141
    list               go to state 32
    access             go to state 33
    assign_variable    go to state 142
    monomial           go to state 35
    call               go to state 36
    variable           go to state 37


State 121

   50 expression: if_start expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 143


State 122

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | else_start EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 144
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 123

   81 call: access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 81 (call)


State 124

   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER
   33 C_returns: . C_type_identifier
   45 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN . C_returns EOL

    IDENTIFIER  shift, and go to state 103

    C_type_identifier  go to state 145
    C_returns          go to state 146


State 125

   30 C_type_identifier: C_type_identifier IDENTIFIER .

    $default  reduce using rule 30 (C_type_identifier)


State 126

   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER
   32 C_arguments: C_arguments COMMA . C_type_identifier

    IDENTIFIER  shift, and go to state 103

    C_type_identifier  go to state 147


State 127

   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL . C_FUNCTION_RETURN C_returns EOL

    C_FUNCTION_RETURN  shift, and go to state 148


State 128

   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | FOR expression COMMA expression COMMA . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 149
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 129

   39 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 39 (definition_arguments)


State 130

   34 return_value: RETURN . expression
   35             | RETURN .  [EOL]
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    $default  reduce using rule 35 (return_value)

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 150
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 131

   14 function_definition: function_start arguments EOL block return_value . EOL

    EOL  shift, and go to state 151


State 132

   24 method_definition: METHOD_DEFINITION arguments . EOL block return_value

    EOL  shift, and go to state 152


State 133

   25 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 153
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 134

   23 methods: methods method_definition . EOL

    EOL  shift, and go to state 154


State 135

   22 methods: method_definition EOL .

    $default  reduce using rule 22 (methods)


State 136

   26 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 155


State 137

   16 class_definition: class_start arguments EOL members_definition methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value

    METHOD_DEFINITION  shift, and go to state 113

    $default  reduce using rule 16 (class_definition)

    method_definition  go to state 134


State 138

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier . EOL
   30 C_type_identifier: C_type_identifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 125
    EOL         shift, and go to state 156


State 139

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL . C_type_identifier EOL
   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER

    IDENTIFIER  shift, and go to state 103

    C_type_identifier  go to state 157


State 140

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables . EOL RIGHT_PARENTHESIS EOL
   43 globals_variables: globals_variables . EOL assign_variable

    EOL  shift, and go to state 158


State 141

   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68


State 142

   42 globals_variables: assign_variable .  [EOL]
   53 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 42 (globals_variables)
    $default  reduce using rule 53 (expression)


State 143

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | if_start expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 159
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 144

   51 expression: else_start EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 160


State 145

   30 C_type_identifier: C_type_identifier . IDENTIFIER
   33 C_returns: C_type_identifier .  [EOL]

    IDENTIFIER  shift, and go to state 125

    $default  reduce using rule 33 (C_returns)


State 146

   45 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns . EOL

    EOL  shift, and go to state 161


State 147

   30 C_type_identifier: C_type_identifier . IDENTIFIER
   32 C_arguments: C_arguments COMMA C_type_identifier .  [COMMA, EOL]

    IDENTIFIER  shift, and go to state 125

    $default  reduce using rule 32 (C_arguments)


State 148

   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER
   33 C_returns: . C_type_identifier
   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN . C_returns EOL

    IDENTIFIER  shift, and go to state 103

    C_type_identifier  go to state 145
    C_returns          go to state 162


State 149

   52 expression: FOR expression COMMA expression COMMA expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 163


State 150

   34 return_value: RETURN expression .  [EOL]
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 34 (return_value)


State 151

   14 function_definition: function_start arguments EOL block return_value EOL .

    $default  reduce using rule 14 (function_definition)


State 152

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   24 method_definition: METHOD_DEFINITION arguments EOL . block return_value
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 164
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 153

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 165


State 154

   23 methods: methods method_definition EOL .

    $default  reduce using rule 23 (methods)


State 155

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 166
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 156

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier EOL .

    $default  reduce using rule 27 (C_members_definition)


State 157

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier . EOL
   30 C_type_identifier: C_type_identifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 125
    EOL         shift, and go to state 167


State 158

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL . RIGHT_PARENTHESIS EOL
   43 globals_variables: globals_variables EOL . assign_variable
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 168
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 141
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 169
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 159

   50 expression: if_start expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 170


State 160

   51 expression: else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (expression)


State 161

   45 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL .

    $default  reduce using rule 45 (c_function_declaration)


State 162

   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns . EOL

    EOL  shift, and go to state 171


State 163

   52 expression: FOR expression COMMA expression COMMA expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 172


State 164

   24 method_definition: METHOD_DEFINITION arguments EOL block . return_value
   34 return_value: . RETURN expression
   35             | . RETURN

    RETURN  shift, and go to state 130

    return_value  go to state 173


State 165

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 25 (members_definition)


State 166

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   54 expression: expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . ASTERISK expression
   57           | expression . SLASH expression
   58           | expression . OP_AND expression
   59           | expression . OP_OR expression
   60           | expression . OP_MORE_EQUAL expression
   61           | expression . OP_LESS_EQUAL expression
   62           | expression . OP_MORE expression
   63           | expression . OP_LESS expression
   64           | expression . OP_NOT_EQUAL expression
   65           | expression . OP_EQUAL expression
   71 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 174


State 167

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL .

    $default  reduce using rule 28 (C_members_definition)


State 168

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS . EOL

    EOL  shift, and go to state 175


State 169

   43 globals_variables: globals_variables EOL assign_variable .  [EOL]
   53 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 43 (globals_variables)
    $default  reduce using rule 53 (expression)


State 170

   50 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 50 (expression)


State 171

   44 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL .

    $default  reduce using rule 44 (c_function_declaration)


State 172

   52 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 176


State 173

   24 method_definition: METHOD_DEFINITION arguments EOL block return_value .

    $default  reduce using rule 24 (method_definition)


State 174

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 26 (members_definition)


State 175

   40 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL .

    $default  reduce using rule 40 (globals_definition)


State 176

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   40 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   41 global_start: . GLOBAL
   44 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT C_arguments EOL C_FUNCTION_RETURN C_returns EOL
   45                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN C_returns EOL
   48 if_start: . IF
   49 else_start: . ELSE
   50 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   52           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   53           | . assign_variable
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression ASTERISK expression
   57           | . expression SLASH expression
   58           | . expression OP_AND expression
   59           | . expression OP_OR expression
   60           | . expression OP_MORE_EQUAL expression
   61           | . expression OP_LESS_EQUAL expression
   62           | . expression OP_MORE expression
   63           | . expression OP_LESS expression
   64           | . expression OP_NOT_EQUAL expression
   65           | . expression OP_EQUAL expression
   66           | . monomial
   67           | . list
   68           | . access
   69 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   70     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   71 access: . expression DOT_IDENTIFIER
   72 assign_variable: . IDENTIFIER EQUAL expression
   73                | . access EQUAL expression
   74 monomial: . call
   75         | . STRING_LITERAL
   76         | . FLOAT_LITERAL
   77         | . INT_LITERAL
   78         | . variable
   79 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   80     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   81     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   82     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   83 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 177
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 177

   52 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 178


State 178

   52 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (expression)

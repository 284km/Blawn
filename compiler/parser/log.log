Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   LEFT_BRACKET
   RIGHT_BRACKET
   IN
   WHILE


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"
    7     | definition

    8 line_content: expression

    9 definition: function_definition
   10           | class_definition
   11           | c_type_definition
   12           | globals_definition
   13           | c_function_declaration

   14 function_definition: function_start arguments EOL lines return_value EOL

   15 function_start: FUNCTION_DEFINITION

   16 class_definition: class_start arguments EOL members_definition methods
   17                 | class_start arguments EOL members_definition
   18                 | class_start arguments EOL methods

   19 class_start: CLASS_DEFINITION

   20 c_type_definition: c_type_start EOL members_definition

   21 c_type_start: C_TYPE_DEFINITION

   22 methods: method_definition EOL
   23        | methods method_definition EOL

   24 method_definition: METHOD_DEFINITION arguments EOL lines return_value

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   27 return_value: RETURN expression
   28             | RETURN

   29 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   30          | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   31 definition_arguments: IDENTIFIER
   32                     | definition_arguments COMMA IDENTIFIER

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

   34 global_start: GLOBAL

   35 globals_variables: assign_variable
   36                  | globals_variables EOL assign_variable

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

   39 expressions: expression
   40            | expressions COMMA expression

   41 if_start: IF

   42 else_start: ELSE

   43 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | assign_variable
   47           | expression PLUS expression
   48           | expression MINUS expression
   49           | expression ASTERISK expression
   50           | expression SLASH expression
   51           | expression OP_AND expression
   52           | expression OP_OR expression
   53           | expression OP_MORE_EQUAL expression
   54           | expression OP_LESS_EQUAL expression
   55           | expression OP_MORE expression
   56           | expression OP_LESS expression
   57           | expression OP_NOT_EQUAL expression
   58           | expression OP_EQUAL expression
   59           | monomial
   60           | list
   61           | access

   62 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

   64 access: expression DOT_IDENTIFIER

   65 assign_variable: IDENTIFIER EQUAL expression
   66                | access EQUAL expression

   67 monomial: call
   68         | STRING_LITERAL
   69         | FLOAT_LITERAL
   70         | INT_LITERAL
   71         | variable

   72 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | access LEFT_PARENTHESIS RIGHT_PARENTHESIS

   76 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 15
METHOD_DEFINITION (259) 24
CLASS_DEFINITION (260) 19
C_TYPE_DEFINITION (261) 21
C_FUNCTION_DECLARATION (262) 37 38
RETURN (263) 27 28
C_FUNCTION (264)
MEMBER_IDENTIFIER (265) 25 26
IDENTIFIER (266) 31 32 65 72 73 76
EQUAL (267) 25 26 65 66
OP_AND (268) 51
OP_OR (269) 52
OP_EQUAL (270) 58
OP_NOT_EQUAL (271) 57
OP_MORE_EQUAL (272) 53
OP_LESS_EQUAL (273) 54
OP_MORE (274) 55
OP_LESS (275) 56
PLUS (276) 47
MINUS (277) 48
ASTERISK (278) 49
SLASH (279) 50
DOT_IDENTIFIER (280) 64
USE (281)
COLON (282)
SEMICOLON (283)
COMMA (284) 32 40 45
LEFT_PARENTHESIS (285) 29 30 33 43 44 45 72 73 74 75
RIGHT_PARENTHESIS (286) 29 30 33 43 44 45 72 73 74 75
LEFT_CURLY_BRACE (287) 62 63
RIGHT_CURLY_BRACE (288) 62 63
LEFT_BRACKET (289)
RIGHT_BRACKET (290)
IF (291) 41
ELSE (292) 42
FOR (293) 45
IN (294)
WHILE (295)
GLOBAL (296) 34
C_FUNCTION_ARGUMENT (297) 37 38
C_FUNCTION_RETURN (298) 37 38
EOL (299) 5 14 16 17 18 20 22 23 24 25 26 33 36 37 38 43 44 45
INT_LITERAL (300) 70
FLOAT_LITERAL (301) 69
STRING_LITERAL (302) 68


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
block (50)
    on left: 2, on right: 1 43 44 45
lines (51)
    on left: 3 4, on right: 2 4 14 24
line (52)
    on left: 5 6 7, on right: 3 4
line_content (53)
    on left: 8, on right: 5 6
definition (54)
    on left: 9 10 11 12 13, on right: 7
function_definition (55)
    on left: 14, on right: 9
function_start (56)
    on left: 15, on right: 14
class_definition (57)
    on left: 16 17 18, on right: 10
class_start (58)
    on left: 19, on right: 16 17 18
c_type_definition (59)
    on left: 20, on right: 11
c_type_start (60)
    on left: 21, on right: 20
methods (61)
    on left: 22 23, on right: 16 18 23
method_definition (62)
    on left: 24, on right: 22 23
members_definition (63)
    on left: 25 26, on right: 16 17 20 26
return_value (64)
    on left: 27 28, on right: 14 24
arguments (65)
    on left: 29 30, on right: 14 16 17 18 24
definition_arguments (66)
    on left: 31 32, on right: 29 32
globals_definition (67)
    on left: 33, on right: 12
global_start (68)
    on left: 34, on right: 33
globals_variables (69)
    on left: 35 36, on right: 33 36
c_function_declaration (70)
    on left: 37 38, on right: 13
expressions (71)
    on left: 39 40, on right: 37 40 62 72 74
if_start (72)
    on left: 41, on right: 43
else_start (73)
    on left: 42, on right: 44
expression (74)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61, on right: 8 25 26 27 37 38 39 40 43 45 47 48 49 50 51 52 53
    54 55 56 57 58 64 65 66
list (75)
    on left: 62 63, on right: 60
access (76)
    on left: 64, on right: 61 66 74 75
assign_variable (77)
    on left: 65 66, on right: 35 36 46
monomial (78)
    on left: 67 68 69 70 71, on right: 59
call (79)
    on left: 72 73 74 75, on right: 67
variable (80)
    on left: 76, on right: 71


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    program                 go to state 14
    block                   go to state 15
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 1

   15 function_start: FUNCTION_DEFINITION .

    $default  reduce using rule 15 (function_start)


State 2

   19 class_start: CLASS_DEFINITION .

    $default  reduce using rule 19 (class_start)


State 3

   21 c_type_start: C_TYPE_DEFINITION .

    $default  reduce using rule 21 (c_type_start)


State 4

   37 c_function_declaration: C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

    EOL  shift, and go to state 38


State 5

   65 assign_variable: IDENTIFIER . EQUAL expression
   72 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: IDENTIFIER .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    EQUAL             shift, and go to state 39
    LEFT_PARENTHESIS  shift, and go to state 40

    $default  reduce using rule 76 (variable)


State 6

   39 expressions: . expression
   40            | . expressions COMMA expression
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   62     | LEFT_CURLY_BRACE . expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   63     | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    LEFT_CURLY_BRACE   shift, and go to state 6
    RIGHT_CURLY_BRACE  shift, and go to state 41
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 42
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 7

   41 if_start: IF .

    $default  reduce using rule 41 (if_start)


State 8

   42 else_start: ELSE .

    $default  reduce using rule 42 (else_start)


State 9

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | FOR . expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 44
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 10

   34 global_start: GLOBAL .

    $default  reduce using rule 34 (global_start)


State 11

   70 monomial: INT_LITERAL .

    $default  reduce using rule 70 (monomial)


State 12

   69 monomial: FLOAT_LITERAL .

    $default  reduce using rule 69 (monomial)


State 13

   68 monomial: STRING_LITERAL .

    $default  reduce using rule 68 (monomial)


State 14

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 45


State 15

    1 program: block .

    $default  reduce using rule 1 (program)


State 16

    2 block: lines .  ["end of file", RIGHT_PARENTHESIS]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    $default  reduce using rule 2 (block)

    line                    go to state 46
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 17

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 18

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 47
    EOL            shift, and go to state 48


State 19

    7 line: definition .

    $default  reduce using rule 7 (line)


State 20

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 21

   14 function_definition: function_start . arguments EOL lines return_value EOL
   29 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   30          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 50


State 22

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 23

   16 class_definition: class_start . arguments EOL members_definition methods
   17                 | class_start . arguments EOL members_definition
   18                 | class_start . arguments EOL methods
   29 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   30          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 51


State 24

   11 definition: c_type_definition .

    $default  reduce using rule 11 (definition)


State 25

   20 c_type_definition: c_type_start . EOL members_definition

    EOL  shift, and go to state 52


State 26

   12 definition: globals_definition .

    $default  reduce using rule 12 (definition)


State 27

   33 globals_definition: global_start . EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 53


State 28

   13 definition: c_function_declaration .

    $default  reduce using rule 13 (definition)


State 29

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   43           | if_start . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 54
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 30

   44 expression: else_start . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 55


State 31

    8 line_content: expression .  ["end of file", EOL]
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 8 (line_content)


State 32

   60 expression: list .

    $default  reduce using rule 60 (expression)


State 33

   61 expression: access .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   66 assign_variable: access . EQUAL expression
   74 call: access . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | access . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    EQUAL             shift, and go to state 69
    LEFT_PARENTHESIS  shift, and go to state 70

    $default  reduce using rule 61 (expression)


State 34

   46 expression: assign_variable .

    $default  reduce using rule 46 (expression)


State 35

   59 expression: monomial .

    $default  reduce using rule 59 (expression)


State 36

   67 monomial: call .

    $default  reduce using rule 67 (monomial)


State 37

   71 monomial: variable .

    $default  reduce using rule 71 (monomial)


State 38

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

    C_FUNCTION_ARGUMENT  shift, and go to state 71


State 39

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   65                | IDENTIFIER EQUAL . expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 72
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 40

   39 expressions: . expression
   40            | . expressions COMMA expression
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   72     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   73     | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 73
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 74
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 41

   63 list: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 63 (list)


State 42

   40 expressions: expressions . COMMA expression
   62 list: LEFT_CURLY_BRACE expressions . RIGHT_CURLY_BRACE

    COMMA              shift, and go to state 75
    RIGHT_CURLY_BRACE  shift, and go to state 76


State 43

   39 expressions: expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 39 (expressions)


State 44

   45 expression: FOR expression . COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 77


State 45

    0 $accept: program "end of file" .

    $default  accept


State 46

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 47

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 48

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 49

   29 arguments: LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS
   30          | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   31 definition_arguments: . IDENTIFIER
   32                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER         shift, and go to state 78
    RIGHT_PARENTHESIS  shift, and go to state 79

    definition_arguments  go to state 80


State 50

   14 function_definition: function_start arguments . EOL lines return_value EOL

    EOL  shift, and go to state 81


State 51

   16 class_definition: class_start arguments . EOL members_definition methods
   17                 | class_start arguments . EOL members_definition
   18                 | class_start arguments . EOL methods

    EOL  shift, and go to state 82


State 52

   20 c_type_definition: c_type_start EOL . members_definition
   25 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    MEMBER_IDENTIFIER  shift, and go to state 83

    members_definition  go to state 84


State 53

   33 globals_definition: global_start EOL . LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    LEFT_PARENTHESIS  shift, and go to state 85


State 54

   43 expression: if_start expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 86


State 55

   44 expression: else_start EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 87


State 56

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   51           | expression OP_AND . expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 88
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 57

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   52           | expression OP_OR . expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 89
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 58

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   58           | expression OP_EQUAL . expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 90
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 59

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   57           | expression OP_NOT_EQUAL . expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 91
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 60

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   53           | expression OP_MORE_EQUAL . expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 92
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 61

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   54           | expression OP_LESS_EQUAL . expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 93
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 62

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   55           | expression OP_MORE . expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 94
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 63

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   56           | expression OP_LESS . expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 95
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 64

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   47           | expression PLUS . expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 96
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 65

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   48           | expression MINUS . expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 97
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 66

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   49           | expression ASTERISK . expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 98
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 67

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   50           | expression SLASH . expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 99
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 68

   64 access: expression DOT_IDENTIFIER .

    $default  reduce using rule 64 (access)


State 69

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   66                | access EQUAL . expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 100
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 70

   39 expressions: . expression
   40            | . expressions COMMA expression
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   74     | access LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   75     | access LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 101
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 102
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 71

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . EOL C_FUNCTION_RETURN expression EOL
   39 expressions: . expression
   40            | . expressions COMMA expression
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    EOL               shift, and go to state 103
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    expressions      go to state 104
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 72

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER
   65 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 65 (assign_variable)

    Conflict between rule 65 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 65 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 65 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 65 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 65 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 65 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 65 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 65 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 65 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 65 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 65 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 65 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 65 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 73

   73 call: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 73 (call)


State 74

   40 expressions: expressions . COMMA expression
   72 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 105


State 75

   40 expressions: expressions COMMA . expression
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 106
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 76

   62 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE .

    $default  reduce using rule 62 (list)


State 77

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | FOR expression COMMA . expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 107
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 78

   31 definition_arguments: IDENTIFIER .

    $default  reduce using rule 31 (definition_arguments)


State 79

   30 arguments: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 30 (arguments)


State 80

   29 arguments: LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS
   32 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 108
    RIGHT_PARENTHESIS  shift, and go to state 109


State 81

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   14                    | function_start arguments EOL . lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    lines                   go to state 110
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 82

   16 class_definition: class_start arguments EOL . members_definition methods
   17                 | class_start arguments EOL . members_definition
   18                 | class_start arguments EOL . methods
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   25 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 111
    MEMBER_IDENTIFIER  shift, and go to state 83

    methods             go to state 112
    method_definition   go to state 113
    members_definition  go to state 114


State 83

   25 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 115


State 84

   20 c_type_definition: c_type_start EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   26 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    MEMBER_IDENTIFIER  shift, and go to state 116

    $default  reduce using rule 20 (c_type_definition)


State 85

   33 globals_definition: global_start EOL LEFT_PARENTHESIS . EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 117


State 86

   43 expression: if_start expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 118


State 87

   44 expression: else_start EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 119


State 88

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   51           | expression OP_AND expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 51 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 51 and token OP_EQUAL resolved as shift (OP_AND < OP_EQUAL).
    Conflict between rule 51 and token OP_NOT_EQUAL resolved as shift (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 51 and token OP_MORE_EQUAL resolved as shift (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 51 and token OP_LESS_EQUAL resolved as shift (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 51 and token OP_MORE resolved as shift (OP_AND < OP_MORE).
    Conflict between rule 51 and token OP_LESS resolved as shift (OP_AND < OP_LESS).
    Conflict between rule 51 and token PLUS resolved as shift (OP_AND < PLUS).
    Conflict between rule 51 and token MINUS resolved as shift (OP_AND < MINUS).
    Conflict between rule 51 and token ASTERISK resolved as shift (OP_AND < ASTERISK).
    Conflict between rule 51 and token SLASH resolved as shift (OP_AND < SLASH).
    Conflict between rule 51 and token DOT_IDENTIFIER resolved as shift (OP_AND < DOT_IDENTIFIER).


State 89

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   52           | expression OP_OR expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 52 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 52 and token OP_EQUAL resolved as shift (OP_OR < OP_EQUAL).
    Conflict between rule 52 and token OP_NOT_EQUAL resolved as shift (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 52 and token OP_MORE_EQUAL resolved as shift (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 52 and token OP_LESS_EQUAL resolved as shift (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 52 and token OP_MORE resolved as shift (OP_OR < OP_MORE).
    Conflict between rule 52 and token OP_LESS resolved as shift (OP_OR < OP_LESS).
    Conflict between rule 52 and token PLUS resolved as shift (OP_OR < PLUS).
    Conflict between rule 52 and token MINUS resolved as shift (OP_OR < MINUS).
    Conflict between rule 52 and token ASTERISK resolved as shift (OP_OR < ASTERISK).
    Conflict between rule 52 and token SLASH resolved as shift (OP_OR < SLASH).
    Conflict between rule 52 and token DOT_IDENTIFIER resolved as shift (OP_OR < DOT_IDENTIFIER).


State 90

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   58           | expression OP_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token OP_AND resolved as reduce (OP_AND < OP_EQUAL).
    Conflict between rule 58 and token OP_OR resolved as reduce (OP_OR < OP_EQUAL).
    Conflict between rule 58 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 58 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 58 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 58 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 58 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 58 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 58 and token PLUS resolved as shift (OP_EQUAL < PLUS).
    Conflict between rule 58 and token MINUS resolved as shift (OP_EQUAL < MINUS).
    Conflict between rule 58 and token ASTERISK resolved as shift (OP_EQUAL < ASTERISK).
    Conflict between rule 58 and token SLASH resolved as shift (OP_EQUAL < SLASH).
    Conflict between rule 58 and token DOT_IDENTIFIER resolved as shift (OP_EQUAL < DOT_IDENTIFIER).


State 91

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   57           | expression OP_NOT_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token OP_AND resolved as reduce (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 57 and token OP_OR resolved as reduce (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 57 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 57 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 57 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 57 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 57 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 57 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 57 and token PLUS resolved as shift (OP_NOT_EQUAL < PLUS).
    Conflict between rule 57 and token MINUS resolved as shift (OP_NOT_EQUAL < MINUS).
    Conflict between rule 57 and token ASTERISK resolved as shift (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 57 and token SLASH resolved as shift (OP_NOT_EQUAL < SLASH).
    Conflict between rule 57 and token DOT_IDENTIFIER resolved as shift (OP_NOT_EQUAL < DOT_IDENTIFIER).


State 92

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   53           | expression OP_MORE_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token OP_AND resolved as reduce (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 53 and token OP_OR resolved as reduce (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 53 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 53 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 53 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 53 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 53 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 53 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 53 and token PLUS resolved as shift (OP_MORE_EQUAL < PLUS).
    Conflict between rule 53 and token MINUS resolved as shift (OP_MORE_EQUAL < MINUS).
    Conflict between rule 53 and token ASTERISK resolved as shift (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 53 and token SLASH resolved as shift (OP_MORE_EQUAL < SLASH).
    Conflict between rule 53 and token DOT_IDENTIFIER resolved as shift (OP_MORE_EQUAL < DOT_IDENTIFIER).


State 93

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   54           | expression OP_LESS_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token OP_AND resolved as reduce (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 54 and token OP_OR resolved as reduce (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 54 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 54 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 54 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 54 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 54 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 54 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 54 and token PLUS resolved as shift (OP_LESS_EQUAL < PLUS).
    Conflict between rule 54 and token MINUS resolved as shift (OP_LESS_EQUAL < MINUS).
    Conflict between rule 54 and token ASTERISK resolved as shift (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 54 and token SLASH resolved as shift (OP_LESS_EQUAL < SLASH).
    Conflict between rule 54 and token DOT_IDENTIFIER resolved as shift (OP_LESS_EQUAL < DOT_IDENTIFIER).


State 94

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   55           | expression OP_MORE expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token OP_AND resolved as reduce (OP_AND < OP_MORE).
    Conflict between rule 55 and token OP_OR resolved as reduce (OP_OR < OP_MORE).
    Conflict between rule 55 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 55 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 55 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 55 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 55 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 55 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 55 and token PLUS resolved as shift (OP_MORE < PLUS).
    Conflict between rule 55 and token MINUS resolved as shift (OP_MORE < MINUS).
    Conflict between rule 55 and token ASTERISK resolved as shift (OP_MORE < ASTERISK).
    Conflict between rule 55 and token SLASH resolved as shift (OP_MORE < SLASH).
    Conflict between rule 55 and token DOT_IDENTIFIER resolved as shift (OP_MORE < DOT_IDENTIFIER).


State 95

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   56           | expression OP_LESS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token OP_AND resolved as reduce (OP_AND < OP_LESS).
    Conflict between rule 56 and token OP_OR resolved as reduce (OP_OR < OP_LESS).
    Conflict between rule 56 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 56 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 56 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 56 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 56 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 56 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 56 and token PLUS resolved as shift (OP_LESS < PLUS).
    Conflict between rule 56 and token MINUS resolved as shift (OP_LESS < MINUS).
    Conflict between rule 56 and token ASTERISK resolved as shift (OP_LESS < ASTERISK).
    Conflict between rule 56 and token SLASH resolved as shift (OP_LESS < SLASH).
    Conflict between rule 56 and token DOT_IDENTIFIER resolved as shift (OP_LESS < DOT_IDENTIFIER).


State 96

   47 expression: expression . PLUS expression
   47           | expression PLUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token OP_AND resolved as reduce (OP_AND < PLUS).
    Conflict between rule 47 and token OP_OR resolved as reduce (OP_OR < PLUS).
    Conflict between rule 47 and token OP_EQUAL resolved as reduce (OP_EQUAL < PLUS).
    Conflict between rule 47 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < PLUS).
    Conflict between rule 47 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < PLUS).
    Conflict between rule 47 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < PLUS).
    Conflict between rule 47 and token OP_MORE resolved as reduce (OP_MORE < PLUS).
    Conflict between rule 47 and token OP_LESS resolved as reduce (OP_LESS < PLUS).
    Conflict between rule 47 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 47 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 47 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 47 and token SLASH resolved as shift (PLUS < SLASH).
    Conflict between rule 47 and token DOT_IDENTIFIER resolved as shift (PLUS < DOT_IDENTIFIER).


State 97

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   48           | expression MINUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token OP_AND resolved as reduce (OP_AND < MINUS).
    Conflict between rule 48 and token OP_OR resolved as reduce (OP_OR < MINUS).
    Conflict between rule 48 and token OP_EQUAL resolved as reduce (OP_EQUAL < MINUS).
    Conflict between rule 48 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < MINUS).
    Conflict between rule 48 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < MINUS).
    Conflict between rule 48 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < MINUS).
    Conflict between rule 48 and token OP_MORE resolved as reduce (OP_MORE < MINUS).
    Conflict between rule 48 and token OP_LESS resolved as reduce (OP_LESS < MINUS).
    Conflict between rule 48 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 48 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 48 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 48 and token SLASH resolved as shift (MINUS < SLASH).
    Conflict between rule 48 and token DOT_IDENTIFIER resolved as shift (MINUS < DOT_IDENTIFIER).


State 98

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   49           | expression ASTERISK expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token OP_AND resolved as reduce (OP_AND < ASTERISK).
    Conflict between rule 49 and token OP_OR resolved as reduce (OP_OR < ASTERISK).
    Conflict between rule 49 and token OP_EQUAL resolved as reduce (OP_EQUAL < ASTERISK).
    Conflict between rule 49 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 49 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 49 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 49 and token OP_MORE resolved as reduce (OP_MORE < ASTERISK).
    Conflict between rule 49 and token OP_LESS resolved as reduce (OP_LESS < ASTERISK).
    Conflict between rule 49 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 49 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 49 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 49 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 49 and token DOT_IDENTIFIER resolved as shift (ASTERISK < DOT_IDENTIFIER).


State 99

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   50           | expression SLASH expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token OP_AND resolved as reduce (OP_AND < SLASH).
    Conflict between rule 50 and token OP_OR resolved as reduce (OP_OR < SLASH).
    Conflict between rule 50 and token OP_EQUAL resolved as reduce (OP_EQUAL < SLASH).
    Conflict between rule 50 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < SLASH).
    Conflict between rule 50 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < SLASH).
    Conflict between rule 50 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < SLASH).
    Conflict between rule 50 and token OP_MORE resolved as reduce (OP_MORE < SLASH).
    Conflict between rule 50 and token OP_LESS resolved as reduce (OP_LESS < SLASH).
    Conflict between rule 50 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 50 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 50 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 50 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 50 and token DOT_IDENTIFIER resolved as shift (SLASH < DOT_IDENTIFIER).


State 100

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER
   66 assign_variable: access EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 66 (assign_variable)

    Conflict between rule 66 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 66 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 66 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 66 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 66 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 66 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 66 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 66 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 66 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 66 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 66 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 66 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 66 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 101

   75 call: access LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 75 (call)


State 102

   40 expressions: expressions . COMMA expression
   74 call: access LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 120


State 103

   38 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL . C_FUNCTION_RETURN expression EOL

    C_FUNCTION_RETURN  shift, and go to state 121


State 104

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions . EOL C_FUNCTION_RETURN expression EOL
   40 expressions: expressions . COMMA expression

    COMMA  shift, and go to state 75
    EOL    shift, and go to state 122


State 105

   72 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 72 (call)


State 106

   40 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 40 (expressions)


State 107

   45 expression: FOR expression COMMA expression . COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 123


State 108

   32 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


State 109

   29 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (arguments)


State 110

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   14                    | function_start arguments EOL lines . return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   27 return_value: . RETURN expression
   28             | . RETURN
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    RETURN                  shift, and go to state 125
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    line                    go to state 46
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    return_value            go to state 126
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 111

   24 method_definition: METHOD_DEFINITION . arguments EOL lines return_value
   29 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   30          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 127


State 112

   18 class_definition: class_start arguments EOL methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 111

    $default  reduce using rule 18 (class_definition)

    method_definition  go to state 128


State 113

   22 methods: method_definition . EOL

    EOL  shift, and go to state 129


State 114

   16 class_definition: class_start arguments EOL members_definition . methods
   17                 | class_start arguments EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   26 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 111
    MEMBER_IDENTIFIER  shift, and go to state 116

    $default  reduce using rule 17 (class_definition)

    methods            go to state 130
    method_definition  go to state 113


State 115

   25 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 131
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 116

   26 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 132


State 117

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL . globals_variables EOL RIGHT_PARENTHESIS EOL
   35 globals_variables: . assign_variable
   36                  | . globals_variables EOL assign_variable
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    globals_variables  go to state 133
    if_start           go to state 29
    else_start         go to state 30
    expression         go to state 134
    list               go to state 32
    access             go to state 33
    assign_variable    go to state 135
    monomial           go to state 35
    call               go to state 36
    variable           go to state 37


State 118

   43 expression: if_start expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 136


State 119

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | else_start EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 137
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 120

   74 call: access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 74 (call)


State 121

   38 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN . expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 138
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 122

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL . C_FUNCTION_RETURN expression EOL

    C_FUNCTION_RETURN  shift, and go to state 139


State 123

   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | FOR expression COMMA expression COMMA . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 140
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 124

   32 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 32 (definition_arguments)


State 125

   27 return_value: RETURN . expression
   28             | RETURN .  [EOL]
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    $default  reduce using rule 28 (return_value)

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 141
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 126

   14 function_definition: function_start arguments EOL lines return_value . EOL

    EOL  shift, and go to state 142


State 127

   24 method_definition: METHOD_DEFINITION arguments . EOL lines return_value

    EOL  shift, and go to state 143


State 128

   23 methods: methods method_definition . EOL

    EOL  shift, and go to state 144


State 129

   22 methods: method_definition EOL .

    $default  reduce using rule 22 (methods)


State 130

   16 class_definition: class_start arguments EOL members_definition methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 111

    $default  reduce using rule 16 (class_definition)

    method_definition  go to state 128


State 131

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 145


State 132

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 146
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 133

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables . EOL RIGHT_PARENTHESIS EOL
   36 globals_variables: globals_variables . EOL assign_variable

    EOL  shift, and go to state 147


State 134

   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68


State 135

   35 globals_variables: assign_variable .  [EOL]
   46 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 35 (globals_variables)
    $default  reduce using rule 46 (expression)


State 136

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   43           | if_start expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 148
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 137

   44 expression: else_start EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 149


State 138

   38 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression . EOL
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 150


State 139

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN . expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 151
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 140

   45 expression: FOR expression COMMA expression COMMA expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 152


State 141

   27 return_value: RETURN expression .  [EOL]
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 27 (return_value)


State 142

   14 function_definition: function_start arguments EOL lines return_value EOL .

    $default  reduce using rule 14 (function_definition)


State 143

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   24 method_definition: METHOD_DEFINITION arguments EOL . lines return_value
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    lines                   go to state 153
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 144

   23 methods: methods method_definition EOL .

    $default  reduce using rule 23 (methods)


State 145

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 25 (members_definition)


State 146

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 154


State 147

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL . RIGHT_PARENTHESIS EOL
   36 globals_variables: globals_variables EOL . assign_variable
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 155
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 134
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 156
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 148

   43 expression: if_start expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 157


State 149

   44 expression: else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 44 (expression)


State 150

   38 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL .

    $default  reduce using rule 38 (c_function_declaration)


State 151

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression . EOL
   47 expression: expression . PLUS expression
   48           | expression . MINUS expression
   49           | expression . ASTERISK expression
   50           | expression . SLASH expression
   51           | expression . OP_AND expression
   52           | expression . OP_OR expression
   53           | expression . OP_MORE_EQUAL expression
   54           | expression . OP_LESS_EQUAL expression
   55           | expression . OP_MORE expression
   56           | expression . OP_LESS expression
   57           | expression . OP_NOT_EQUAL expression
   58           | expression . OP_EQUAL expression
   64 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 158


State 152

   45 expression: FOR expression COMMA expression COMMA expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 159


State 153

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   24 method_definition: METHOD_DEFINITION arguments EOL lines . return_value
   27 return_value: . RETURN expression
   28             | . RETURN
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    RETURN                  shift, and go to state 125
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    line                    go to state 46
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    return_value            go to state 160
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 154

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 26 (members_definition)


State 155

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS . EOL

    EOL  shift, and go to state 161


State 156

   36 globals_variables: globals_variables EOL assign_variable .  [EOL]
   46 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 36 (globals_variables)
    $default  reduce using rule 46 (expression)


State 157

   43 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 43 (expression)


State 158

   37 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL .

    $default  reduce using rule 37 (c_function_declaration)


State 159

   45 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 162


State 160

   24 method_definition: METHOD_DEFINITION arguments EOL lines return_value .

    $default  reduce using rule 24 (method_definition)


State 161

   33 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL .

    $default  reduce using rule 33 (globals_definition)


State 162

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL lines return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   33 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   34 global_start: . GLOBAL
   37 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   38                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   41 if_start: . IF
   42 else_start: . ELSE
   43 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   44           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   45           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   46           | . assign_variable
   47           | . expression PLUS expression
   48           | . expression MINUS expression
   49           | . expression ASTERISK expression
   50           | . expression SLASH expression
   51           | . expression OP_AND expression
   52           | . expression OP_OR expression
   53           | . expression OP_MORE_EQUAL expression
   54           | . expression OP_LESS_EQUAL expression
   55           | . expression OP_MORE expression
   56           | . expression OP_LESS expression
   57           | . expression OP_NOT_EQUAL expression
   58           | . expression OP_EQUAL expression
   59           | . monomial
   60           | . list
   61           | . access
   62 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   63     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   64 access: . expression DOT_IDENTIFIER
   65 assign_variable: . IDENTIFIER EQUAL expression
   66                | . access EQUAL expression
   67 monomial: . call
   68         | . STRING_LITERAL
   69         | . FLOAT_LITERAL
   70         | . INT_LITERAL
   71         | . variable
   72 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   73     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   74     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   75     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   76 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 163
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 163

   45 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 164


State 164

   45 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 45 (expression)

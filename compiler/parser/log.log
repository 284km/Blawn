Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   LEFT_BRACKET
   RIGHT_BRACKET
   IN
   WHILE


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"
    7     | definition

    8 line_content: expression

    9 definition: function_definition
   10           | class_definition

   11 function_definition: function_start arguments EOL lines return_value EOL

   12 function_start: FUNCTION_DEFINITION

   13 class_definition: class_start arguments EOL members_definition methods
   14                 | class_start arguments EOL members_definition
   15                 | class_start arguments EOL methods

   16 class_start: CLASS_DEFINITION

   17 methods: method_definition EOL
   18        | methods method_definition EOL

   19 method_definition: METHOD_DEFINITION arguments EOL lines return_value

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   21                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   22 return_value: RETURN expression
   23             | RETURN

   24 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   26 definition_arguments: IDENTIFIER
   27                     | definition_arguments COMMA IDENTIFIER

   28 expressions: expression
   29            | expressions COMMA expression

   30 if_start: IF

   31 else_start: ELSE

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | monomial
   36           | assign_variable
   37           | expression PLUS expression
   38           | expression MINUS expression
   39           | expression ASTERISK expression
   40           | expression SLASH expression
   41           | expression OP_AND expression
   42           | expression OP_OR expression
   43           | expression OP_MORE_EQUAL expression
   44           | expression OP_LESS_EQUAL expression
   45           | expression OP_MORE expression
   46           | expression OP_LESS expression
   47           | expression OP_EQUAL expression
   48           | expression OP_NOT_EQUAL expression
   49           | list
   50           | access

   51 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

   53 access: expression DOT_IDENTIFIER

   54 assign_variable: IDENTIFIER EQUAL expression
   55                | access EQUAL expression

   56 monomial: call
   57         | STRING_LITERAL
   58         | FLOAT_LITERAL
   59         | INT_LITERAL
   60         | variable

   61 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | access LEFT_PARENTHESIS RIGHT_PARENTHESIS

   65 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 12
METHOD_DEFINITION (259) 19
CLASS_DEFINITION (260) 16
RETURN (261) 22 23
C_FUNCTION (262)
MEMBER_IDENTIFIER (263) 20 21
IDENTIFIER (264) 26 27 54 61 62 65
OP_EQUAL (265) 47
OP_NOT_EQUAL (266) 48
OP_MORE_EQUAL (267) 43
OP_LESS_EQUAL (268) 44
OP_MORE (269) 45
OP_LESS (270) 46
OP_AND (271) 41
OP_OR (272) 42
EQUAL (273) 20 21 54 55
PLUS (274) 37
MINUS (275) 38
ASTERISK (276) 39
SLASH (277) 40
DOT_IDENTIFIER (278) 53
USE (279)
COLON (280)
SEMICOLON (281)
COMMA (282) 27 29 34
LEFT_PARENTHESIS (283) 24 25 32 33 34 61 62 63 64
RIGHT_PARENTHESIS (284) 24 25 32 33 34 61 62 63 64
LEFT_CURLY_BRACE (285) 51 52
RIGHT_CURLY_BRACE (286) 51 52
LEFT_BRACKET (287)
RIGHT_BRACKET (288)
IF (289) 30
ELSE (290) 31
FOR (291) 34
IN (292)
WHILE (293)
EOL (294) 5 11 13 14 15 17 18 19 20 21 32 33 34
INT_LITERAL (295) 59
FLOAT_LITERAL (296) 58
STRING_LITERAL (297) 57


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
program (44)
    on left: 1, on right: 0
block (45)
    on left: 2, on right: 1 32 33 34
lines (46)
    on left: 3 4, on right: 2 4 11 19
line (47)
    on left: 5 6 7, on right: 3 4
line_content (48)
    on left: 8, on right: 5 6
definition (49)
    on left: 9 10, on right: 7
function_definition (50)
    on left: 11, on right: 9
function_start (51)
    on left: 12, on right: 11
class_definition (52)
    on left: 13 14 15, on right: 10
class_start (53)
    on left: 16, on right: 13 14 15
methods (54)
    on left: 17 18, on right: 13 15 18
method_definition (55)
    on left: 19, on right: 17 18
members_definition (56)
    on left: 20 21, on right: 13 14 21
return_value (57)
    on left: 22 23, on right: 11 19
arguments (58)
    on left: 24 25, on right: 11 13 14 15 19
definition_arguments (59)
    on left: 26 27, on right: 24 27
expressions (60)
    on left: 28 29, on right: 29 51 61 63
if_start (61)
    on left: 30, on right: 32
else_start (62)
    on left: 31, on right: 33
expression (63)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50, on right: 8 20 21 22 28 29 32 34 37 38 39 40 41 42 43 44 45
    46 47 48 53 54 55
list (64)
    on left: 51 52, on right: 49
access (65)
    on left: 53, on right: 50 55 63 64
assign_variable (66)
    on left: 54 55, on right: 36
monomial (67)
    on left: 56 57 58 59 60, on right: 35
call (68)
    on left: 61 62 63 64, on right: 56
variable (69)
    on left: 65, on right: 60


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    program              go to state 11
    block                go to state 12
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 1

   12 function_start: FUNCTION_DEFINITION .

    $default  reduce using rule 12 (function_start)


State 2

   16 class_start: CLASS_DEFINITION .

    $default  reduce using rule 16 (class_start)


State 3

   54 assign_variable: IDENTIFIER . EQUAL expression
   61 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: IDENTIFIER .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    EQUAL             shift, and go to state 30
    LEFT_PARENTHESIS  shift, and go to state 31

    $default  reduce using rule 65 (variable)


State 4

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   51     | LEFT_CURLY_BRACE . expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   52     | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 3
    LEFT_CURLY_BRACE   shift, and go to state 4
    RIGHT_CURLY_BRACE  shift, and go to state 32
    IF                 shift, and go to state 5
    ELSE               shift, and go to state 6
    FOR                shift, and go to state 7
    INT_LITERAL        shift, and go to state 8
    FLOAT_LITERAL      shift, and go to state 9
    STRING_LITERAL     shift, and go to state 10

    expressions      go to state 33
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 34
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 5

   30 if_start: IF .

    $default  reduce using rule 30 (if_start)


State 6

   31 else_start: ELSE .

    $default  reduce using rule 31 (else_start)


State 7

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR . expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 35
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 8

   59 monomial: INT_LITERAL .

    $default  reduce using rule 59 (monomial)


State 9

   58 monomial: FLOAT_LITERAL .

    $default  reduce using rule 58 (monomial)


State 10

   57 monomial: STRING_LITERAL .

    $default  reduce using rule 57 (monomial)


State 11

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 36


State 12

    1 program: block .

    $default  reduce using rule 1 (program)


State 13

    2 block: lines .  ["end of file", RIGHT_PARENTHESIS]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    $default  reduce using rule 2 (block)

    line                 go to state 37
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 14

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 15

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 38
    EOL            shift, and go to state 39


State 16

    7 line: definition .

    $default  reduce using rule 7 (line)


State 17

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 18

   11 function_definition: function_start . arguments EOL lines return_value EOL
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 40

    arguments  go to state 41


State 19

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 20

   13 class_definition: class_start . arguments EOL members_definition methods
   14                 | class_start . arguments EOL members_definition
   15                 | class_start . arguments EOL methods
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 40

    arguments  go to state 42


State 21

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   32           | if_start . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 43
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 22

   33 expression: else_start . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 44


State 23

    8 line_content: expression .  ["end of file", EOL]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 8 (line_content)


State 24

   49 expression: list .

    $default  reduce using rule 49 (expression)


State 25

   50 expression: access .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   55 assign_variable: access . EQUAL expression
   63 call: access . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | access . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    EQUAL             shift, and go to state 58
    LEFT_PARENTHESIS  shift, and go to state 59

    $default  reduce using rule 50 (expression)


State 26

   36 expression: assign_variable .

    $default  reduce using rule 36 (expression)


State 27

   35 expression: monomial .

    $default  reduce using rule 35 (expression)


State 28

   56 monomial: call .

    $default  reduce using rule 56 (monomial)


State 29

   60 monomial: variable .

    $default  reduce using rule 60 (monomial)


State 30

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   54                | IDENTIFIER EQUAL . expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 60
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 31

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   61     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   62     | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 3
    RIGHT_PARENTHESIS  shift, and go to state 61
    LEFT_CURLY_BRACE   shift, and go to state 4
    IF                 shift, and go to state 5
    ELSE               shift, and go to state 6
    FOR                shift, and go to state 7
    INT_LITERAL        shift, and go to state 8
    FLOAT_LITERAL      shift, and go to state 9
    STRING_LITERAL     shift, and go to state 10

    expressions      go to state 62
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 34
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 32

   52 list: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 52 (list)


State 33

   29 expressions: expressions . COMMA expression
   51 list: LEFT_CURLY_BRACE expressions . RIGHT_CURLY_BRACE

    COMMA              shift, and go to state 63
    RIGHT_CURLY_BRACE  shift, and go to state 64


State 34

   28 expressions: expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 28 (expressions)


State 35

   34 expression: FOR expression . COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    COMMA           shift, and go to state 65


State 36

    0 $accept: program "end of file" .

    $default  accept


State 37

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 38

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 39

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 40

   24 arguments: LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS
   25          | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   26 definition_arguments: . IDENTIFIER
   27                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER         shift, and go to state 66
    RIGHT_PARENTHESIS  shift, and go to state 67

    definition_arguments  go to state 68


State 41

   11 function_definition: function_start arguments . EOL lines return_value EOL

    EOL  shift, and go to state 69


State 42

   13 class_definition: class_start arguments . EOL members_definition methods
   14                 | class_start arguments . EOL members_definition
   15                 | class_start arguments . EOL methods

    EOL  shift, and go to state 70


State 43

   32 expression: if_start expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    EOL             shift, and go to state 71


State 44

   33 expression: else_start EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 72


State 45

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   47           | expression OP_EQUAL . expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 73
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 46

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   48           | expression OP_NOT_EQUAL . expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 74
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 47

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   43           | expression OP_MORE_EQUAL . expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 75
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 48

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   44           | expression OP_LESS_EQUAL . expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 76
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 49

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   45           | expression OP_MORE . expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 77
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 50

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   46           | expression OP_LESS . expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 78
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 51

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   41           | expression OP_AND . expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 79
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 52

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   42           | expression OP_OR . expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 80
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 53

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   37           | expression PLUS . expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 81
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 54

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   38           | expression MINUS . expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 82
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 55

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   39           | expression ASTERISK . expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 83
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 56

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   40           | expression SLASH . expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 84
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 57

   53 access: expression DOT_IDENTIFIER .

    $default  reduce using rule 53 (access)


State 58

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   55                | access EQUAL . expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 85
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 59

   28 expressions: . expression
   29            | . expressions COMMA expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   63     | access LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   64     | access LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 3
    RIGHT_PARENTHESIS  shift, and go to state 86
    LEFT_CURLY_BRACE   shift, and go to state 4
    IF                 shift, and go to state 5
    ELSE               shift, and go to state 6
    FOR                shift, and go to state 7
    INT_LITERAL        shift, and go to state 8
    FLOAT_LITERAL      shift, and go to state 9
    STRING_LITERAL     shift, and go to state 10

    expressions      go to state 87
    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 34
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 60

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER
   54 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 54 (assign_variable)

    Conflict between rule 54 and token OP_EQUAL resolved as reduce (OP_EQUAL < EQUAL).
    Conflict between rule 54 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < EQUAL).
    Conflict between rule 54 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < EQUAL).
    Conflict between rule 54 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < EQUAL).
    Conflict between rule 54 and token OP_MORE resolved as reduce (OP_MORE < EQUAL).
    Conflict between rule 54 and token OP_LESS resolved as reduce (OP_LESS < EQUAL).
    Conflict between rule 54 and token OP_AND resolved as reduce (OP_AND < EQUAL).
    Conflict between rule 54 and token OP_OR resolved as reduce (OP_OR < EQUAL).
    Conflict between rule 54 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 54 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 54 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 54 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 54 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 61

   62 call: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 62 (call)


State 62

   29 expressions: expressions . COMMA expression
   61 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 63
    RIGHT_PARENTHESIS  shift, and go to state 88


State 63

   29 expressions: expressions COMMA . expression
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 89
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 64

   51 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE .

    $default  reduce using rule 51 (list)


State 65

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA . expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 90
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 66

   26 definition_arguments: IDENTIFIER .

    $default  reduce using rule 26 (definition_arguments)


State 67

   25 arguments: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 25 (arguments)


State 68

   24 arguments: LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS
   27 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 91
    RIGHT_PARENTHESIS  shift, and go to state 92


State 69

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   11                    | function_start arguments EOL . lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    lines                go to state 93
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 70

   13 class_definition: class_start arguments EOL . members_definition methods
   14                 | class_start arguments EOL . members_definition
   15                 | class_start arguments EOL . methods
   17 methods: . method_definition EOL
   18        | . methods method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   20 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   21                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 94
    MEMBER_IDENTIFIER  shift, and go to state 95

    methods             go to state 96
    method_definition   go to state 97
    members_definition  go to state 98


State 71

   32 expression: if_start expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 99


State 72

   33 expression: else_start EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 100


State 73

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   47           | expression OP_EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 47 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 47 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 47 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 47 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 47 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 47 and token OP_AND resolved as shift (OP_EQUAL < OP_AND).
    Conflict between rule 47 and token OP_OR resolved as shift (OP_EQUAL < OP_OR).
    Conflict between rule 47 and token PLUS resolved as shift (OP_EQUAL < PLUS).
    Conflict between rule 47 and token MINUS resolved as shift (OP_EQUAL < MINUS).
    Conflict between rule 47 and token ASTERISK resolved as shift (OP_EQUAL < ASTERISK).
    Conflict between rule 47 and token SLASH resolved as shift (OP_EQUAL < SLASH).
    Conflict between rule 47 and token DOT_IDENTIFIER resolved as shift (OP_EQUAL < DOT_IDENTIFIER).


State 74

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   48           | expression OP_NOT_EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 48 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 48 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 48 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 48 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 48 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 48 and token OP_AND resolved as shift (OP_NOT_EQUAL < OP_AND).
    Conflict between rule 48 and token OP_OR resolved as shift (OP_NOT_EQUAL < OP_OR).
    Conflict between rule 48 and token PLUS resolved as shift (OP_NOT_EQUAL < PLUS).
    Conflict between rule 48 and token MINUS resolved as shift (OP_NOT_EQUAL < MINUS).
    Conflict between rule 48 and token ASTERISK resolved as shift (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 48 and token SLASH resolved as shift (OP_NOT_EQUAL < SLASH).
    Conflict between rule 48 and token DOT_IDENTIFIER resolved as shift (OP_NOT_EQUAL < DOT_IDENTIFIER).


State 75

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   43           | expression OP_MORE_EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 43 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 43 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 43 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 43 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 43 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 43 and token OP_AND resolved as shift (OP_MORE_EQUAL < OP_AND).
    Conflict between rule 43 and token OP_OR resolved as shift (OP_MORE_EQUAL < OP_OR).
    Conflict between rule 43 and token PLUS resolved as shift (OP_MORE_EQUAL < PLUS).
    Conflict between rule 43 and token MINUS resolved as shift (OP_MORE_EQUAL < MINUS).
    Conflict between rule 43 and token ASTERISK resolved as shift (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 43 and token SLASH resolved as shift (OP_MORE_EQUAL < SLASH).
    Conflict between rule 43 and token DOT_IDENTIFIER resolved as shift (OP_MORE_EQUAL < DOT_IDENTIFIER).


State 76

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   44           | expression OP_LESS_EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 44 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 44 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 44 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 44 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 44 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 44 and token OP_AND resolved as shift (OP_LESS_EQUAL < OP_AND).
    Conflict between rule 44 and token OP_OR resolved as shift (OP_LESS_EQUAL < OP_OR).
    Conflict between rule 44 and token PLUS resolved as shift (OP_LESS_EQUAL < PLUS).
    Conflict between rule 44 and token MINUS resolved as shift (OP_LESS_EQUAL < MINUS).
    Conflict between rule 44 and token ASTERISK resolved as shift (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 44 and token SLASH resolved as shift (OP_LESS_EQUAL < SLASH).
    Conflict between rule 44 and token DOT_IDENTIFIER resolved as shift (OP_LESS_EQUAL < DOT_IDENTIFIER).


State 77

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   45           | expression OP_MORE expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 45 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 45 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 45 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 45 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 45 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 45 and token OP_AND resolved as shift (OP_MORE < OP_AND).
    Conflict between rule 45 and token OP_OR resolved as shift (OP_MORE < OP_OR).
    Conflict between rule 45 and token PLUS resolved as shift (OP_MORE < PLUS).
    Conflict between rule 45 and token MINUS resolved as shift (OP_MORE < MINUS).
    Conflict between rule 45 and token ASTERISK resolved as shift (OP_MORE < ASTERISK).
    Conflict between rule 45 and token SLASH resolved as shift (OP_MORE < SLASH).
    Conflict between rule 45 and token DOT_IDENTIFIER resolved as shift (OP_MORE < DOT_IDENTIFIER).


State 78

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   46           | expression OP_LESS expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 46 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 46 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 46 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 46 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 46 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 46 and token OP_AND resolved as shift (OP_LESS < OP_AND).
    Conflict between rule 46 and token OP_OR resolved as shift (OP_LESS < OP_OR).
    Conflict between rule 46 and token PLUS resolved as shift (OP_LESS < PLUS).
    Conflict between rule 46 and token MINUS resolved as shift (OP_LESS < MINUS).
    Conflict between rule 46 and token ASTERISK resolved as shift (OP_LESS < ASTERISK).
    Conflict between rule 46 and token SLASH resolved as shift (OP_LESS < SLASH).
    Conflict between rule 46 and token DOT_IDENTIFIER resolved as shift (OP_LESS < DOT_IDENTIFIER).


State 79

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   41           | expression OP_AND expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < OP_AND).
    Conflict between rule 41 and token OP_MORE resolved as reduce (OP_MORE < OP_AND).
    Conflict between rule 41 and token OP_LESS resolved as reduce (OP_LESS < OP_AND).
    Conflict between rule 41 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 41 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 41 and token PLUS resolved as shift (OP_AND < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (OP_AND < MINUS).
    Conflict between rule 41 and token ASTERISK resolved as shift (OP_AND < ASTERISK).
    Conflict between rule 41 and token SLASH resolved as shift (OP_AND < SLASH).
    Conflict between rule 41 and token DOT_IDENTIFIER resolved as shift (OP_AND < DOT_IDENTIFIER).


State 80

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   42           | expression OP_OR expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < OP_OR).
    Conflict between rule 42 and token OP_MORE resolved as reduce (OP_MORE < OP_OR).
    Conflict between rule 42 and token OP_LESS resolved as reduce (OP_LESS < OP_OR).
    Conflict between rule 42 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 42 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 42 and token PLUS resolved as shift (OP_OR < PLUS).
    Conflict between rule 42 and token MINUS resolved as shift (OP_OR < MINUS).
    Conflict between rule 42 and token ASTERISK resolved as shift (OP_OR < ASTERISK).
    Conflict between rule 42 and token SLASH resolved as shift (OP_OR < SLASH).
    Conflict between rule 42 and token DOT_IDENTIFIER resolved as shift (OP_OR < DOT_IDENTIFIER).


State 81

   37 expression: expression . PLUS expression
   37           | expression PLUS expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token OP_EQUAL resolved as reduce (OP_EQUAL < PLUS).
    Conflict between rule 37 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < PLUS).
    Conflict between rule 37 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < PLUS).
    Conflict between rule 37 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < PLUS).
    Conflict between rule 37 and token OP_MORE resolved as reduce (OP_MORE < PLUS).
    Conflict between rule 37 and token OP_LESS resolved as reduce (OP_LESS < PLUS).
    Conflict between rule 37 and token OP_AND resolved as reduce (OP_AND < PLUS).
    Conflict between rule 37 and token OP_OR resolved as reduce (OP_OR < PLUS).
    Conflict between rule 37 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 37 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 37 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 37 and token SLASH resolved as shift (PLUS < SLASH).
    Conflict between rule 37 and token DOT_IDENTIFIER resolved as shift (PLUS < DOT_IDENTIFIER).


State 82

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   38           | expression MINUS expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token OP_EQUAL resolved as reduce (OP_EQUAL < MINUS).
    Conflict between rule 38 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < MINUS).
    Conflict between rule 38 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < MINUS).
    Conflict between rule 38 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < MINUS).
    Conflict between rule 38 and token OP_MORE resolved as reduce (OP_MORE < MINUS).
    Conflict between rule 38 and token OP_LESS resolved as reduce (OP_LESS < MINUS).
    Conflict between rule 38 and token OP_AND resolved as reduce (OP_AND < MINUS).
    Conflict between rule 38 and token OP_OR resolved as reduce (OP_OR < MINUS).
    Conflict between rule 38 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 38 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 38 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 38 and token SLASH resolved as shift (MINUS < SLASH).
    Conflict between rule 38 and token DOT_IDENTIFIER resolved as shift (MINUS < DOT_IDENTIFIER).


State 83

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   39           | expression ASTERISK expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token OP_EQUAL resolved as reduce (OP_EQUAL < ASTERISK).
    Conflict between rule 39 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 39 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 39 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 39 and token OP_MORE resolved as reduce (OP_MORE < ASTERISK).
    Conflict between rule 39 and token OP_LESS resolved as reduce (OP_LESS < ASTERISK).
    Conflict between rule 39 and token OP_AND resolved as reduce (OP_AND < ASTERISK).
    Conflict between rule 39 and token OP_OR resolved as reduce (OP_OR < ASTERISK).
    Conflict between rule 39 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 39 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 39 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 39 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 39 and token DOT_IDENTIFIER resolved as shift (ASTERISK < DOT_IDENTIFIER).


State 84

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   40           | expression SLASH expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token OP_EQUAL resolved as reduce (OP_EQUAL < SLASH).
    Conflict between rule 40 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < SLASH).
    Conflict between rule 40 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < SLASH).
    Conflict between rule 40 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < SLASH).
    Conflict between rule 40 and token OP_MORE resolved as reduce (OP_MORE < SLASH).
    Conflict between rule 40 and token OP_LESS resolved as reduce (OP_LESS < SLASH).
    Conflict between rule 40 and token OP_AND resolved as reduce (OP_AND < SLASH).
    Conflict between rule 40 and token OP_OR resolved as reduce (OP_OR < SLASH).
    Conflict between rule 40 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 40 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 40 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 40 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 40 and token DOT_IDENTIFIER resolved as shift (SLASH < DOT_IDENTIFIER).


State 85

   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER
   55 assign_variable: access EQUAL expression .  ["end of file", OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 55 (assign_variable)

    Conflict between rule 55 and token OP_EQUAL resolved as reduce (OP_EQUAL < EQUAL).
    Conflict between rule 55 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < EQUAL).
    Conflict between rule 55 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < EQUAL).
    Conflict between rule 55 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < EQUAL).
    Conflict between rule 55 and token OP_MORE resolved as reduce (OP_MORE < EQUAL).
    Conflict between rule 55 and token OP_LESS resolved as reduce (OP_LESS < EQUAL).
    Conflict between rule 55 and token OP_AND resolved as reduce (OP_AND < EQUAL).
    Conflict between rule 55 and token OP_OR resolved as reduce (OP_OR < EQUAL).
    Conflict between rule 55 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 55 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 55 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 55 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 55 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 86

   64 call: access LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 64 (call)


State 87

   29 expressions: expressions . COMMA expression
   63 call: access LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 63
    RIGHT_PARENTHESIS  shift, and go to state 101


State 88

   61 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 61 (call)


State 89

   29 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 29 (expressions)


State 90

   34 expression: FOR expression COMMA expression . COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    COMMA           shift, and go to state 102


State 91

   27 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 103


State 92

   24 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 24 (arguments)


State 93

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   11                    | function_start arguments EOL lines . return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   22 return_value: . RETURN expression
   23             | . RETURN
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 104
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    line                 go to state 37
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    return_value         go to state 105
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 94

   19 method_definition: METHOD_DEFINITION . arguments EOL lines return_value
   24 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   25          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 40

    arguments  go to state 106


State 95

   20 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 107


State 96

   15 class_definition: class_start arguments EOL methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   18 methods: methods . method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 94

    $default  reduce using rule 15 (class_definition)

    method_definition  go to state 108


State 97

   17 methods: method_definition . EOL

    EOL  shift, and go to state 109


State 98

   13 class_definition: class_start arguments EOL members_definition . methods
   14                 | class_start arguments EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   17 methods: . method_definition EOL
   18        | . methods method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value
   21 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 94
    MEMBER_IDENTIFIER  shift, and go to state 110

    $default  reduce using rule 14 (class_definition)

    methods            go to state 111
    method_definition  go to state 97


State 99

   32 expression: if_start expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 112


State 100

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | else_start EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 113
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 101

   63 call: access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 63 (call)


State 102

   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 114
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 103

   27 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 27 (definition_arguments)


State 104

   22 return_value: RETURN . expression
   23             | RETURN .  [EOL]
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    $default  reduce using rule 23 (return_value)

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 115
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 105

   11 function_definition: function_start arguments EOL lines return_value . EOL

    EOL  shift, and go to state 116


State 106

   19 method_definition: METHOD_DEFINITION arguments . EOL lines return_value

    EOL  shift, and go to state 117


State 107

   20 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 118
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 108

   18 methods: methods method_definition . EOL

    EOL  shift, and go to state 119


State 109

   17 methods: method_definition EOL .

    $default  reduce using rule 17 (methods)


State 110

   21 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 120


State 111

   13 class_definition: class_start arguments EOL members_definition methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   18 methods: methods . method_definition EOL
   19 method_definition: . METHOD_DEFINITION arguments EOL lines return_value

    METHOD_DEFINITION  shift, and go to state 94

    $default  reduce using rule 13 (class_definition)

    method_definition  go to state 108


State 112

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   32           | if_start expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 121
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 113

   33 expression: else_start EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 122


State 114

   34 expression: FOR expression COMMA expression COMMA expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   37           | expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    EOL             shift, and go to state 123


State 115

   22 return_value: RETURN expression .  [EOL]
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57

    $default  reduce using rule 22 (return_value)


State 116

   11 function_definition: function_start arguments EOL lines return_value EOL .

    $default  reduce using rule 11 (function_definition)


State 117

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   19 method_definition: METHOD_DEFINITION arguments EOL . lines return_value
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    lines                go to state 124
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 118

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    EOL             shift, and go to state 125


State 119

   18 methods: methods method_definition EOL .

    $default  reduce using rule 18 (methods)


State 120

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 3
    LEFT_CURLY_BRACE  shift, and go to state 4
    IF                shift, and go to state 5
    ELSE              shift, and go to state 6
    FOR               shift, and go to state 7
    INT_LITERAL       shift, and go to state 8
    FLOAT_LITERAL     shift, and go to state 9
    STRING_LITERAL    shift, and go to state 10

    if_start         go to state 21
    else_start       go to state 22
    expression       go to state 126
    list             go to state 24
    access           go to state 25
    assign_variable  go to state 26
    monomial         go to state 27
    call             go to state 28
    variable         go to state 29


State 121

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 127


State 122

   33 expression: else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 33 (expression)


State 123

   34 expression: FOR expression COMMA expression COMMA expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 128


State 124

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   19 method_definition: METHOD_DEFINITION arguments EOL lines . return_value
   22 return_value: . RETURN expression
   23             | . RETURN
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 104
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    line                 go to state 37
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    return_value         go to state 129
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 125

   20 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 20 (members_definition)


State 126

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   37 expression: expression . PLUS expression
   38           | expression . MINUS expression
   39           | expression . ASTERISK expression
   40           | expression . SLASH expression
   41           | expression . OP_AND expression
   42           | expression . OP_OR expression
   43           | expression . OP_MORE_EQUAL expression
   44           | expression . OP_LESS_EQUAL expression
   45           | expression . OP_MORE expression
   46           | expression . OP_LESS expression
   47           | expression . OP_EQUAL expression
   48           | expression . OP_NOT_EQUAL expression
   53 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 45
    OP_NOT_EQUAL    shift, and go to state 46
    OP_MORE_EQUAL   shift, and go to state 47
    OP_LESS_EQUAL   shift, and go to state 48
    OP_MORE         shift, and go to state 49
    OP_LESS         shift, and go to state 50
    OP_AND          shift, and go to state 51
    OP_OR           shift, and go to state 52
    PLUS            shift, and go to state 53
    MINUS           shift, and go to state 54
    ASTERISK        shift, and go to state 55
    SLASH           shift, and go to state 56
    DOT_IDENTIFIER  shift, and go to state 57
    EOL             shift, and go to state 130


State 127

   32 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 32 (expression)


State 128

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 131


State 129

   19 method_definition: METHOD_DEFINITION arguments EOL lines return_value .

    $default  reduce using rule 19 (method_definition)


State 130

   21 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 21 (members_definition)


State 131

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . function_start arguments EOL lines return_value EOL
   12 function_start: . FUNCTION_DEFINITION
   13 class_definition: . class_start arguments EOL members_definition methods
   14                 | . class_start arguments EOL members_definition
   15                 | . class_start arguments EOL methods
   16 class_start: . CLASS_DEFINITION
   30 if_start: . IF
   31 else_start: . ELSE
   32 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   33           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   34           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   35           | . monomial
   36           | . assign_variable
   37           | . expression PLUS expression
   38           | . expression MINUS expression
   39           | . expression ASTERISK expression
   40           | . expression SLASH expression
   41           | . expression OP_AND expression
   42           | . expression OP_OR expression
   43           | . expression OP_MORE_EQUAL expression
   44           | . expression OP_LESS_EQUAL expression
   45           | . expression OP_MORE expression
   46           | . expression OP_LESS expression
   47           | . expression OP_EQUAL expression
   48           | . expression OP_NOT_EQUAL expression
   49           | . list
   50           | . access
   51 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   52     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   53 access: . expression DOT_IDENTIFIER
   54 assign_variable: . IDENTIFIER EQUAL expression
   55                | . access EQUAL expression
   56 monomial: . call
   57         | . STRING_LITERAL
   58         | . FLOAT_LITERAL
   59         | . INT_LITERAL
   60         | . variable
   61 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   62     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   63     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   64     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   65 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    LEFT_CURLY_BRACE     shift, and go to state 4
    IF                   shift, and go to state 5
    ELSE                 shift, and go to state 6
    FOR                  shift, and go to state 7
    INT_LITERAL          shift, and go to state 8
    FLOAT_LITERAL        shift, and go to state 9
    STRING_LITERAL       shift, and go to state 10

    block                go to state 132
    lines                go to state 13
    line                 go to state 14
    line_content         go to state 15
    definition           go to state 16
    function_definition  go to state 17
    function_start       go to state 18
    class_definition     go to state 19
    class_start          go to state 20
    if_start             go to state 21
    else_start           go to state 22
    expression           go to state 23
    list                 go to state 24
    access               go to state 25
    assign_variable      go to state 26
    monomial             go to state 27
    call                 go to state 28
    variable             go to state 29


State 132

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 133


State 133

   34 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 34 (expression)

Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   LEFT_BRACKET
   RIGHT_BRACKET
   IN
   WHILE


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"
    7     | definition

    8 line_content: expression

    9 definition: function_definition
   10           | class_definition
   11           | c_type_definition
   12           | globals_definition
   13           | c_function_declaration

   14 function_definition: function_start arguments EOL block return_value EOL

   15 function_start: FUNCTION_DEFINITION

   16 class_definition: class_start arguments EOL members_definition methods
   17                 | class_start arguments EOL members_definition
   18                 | class_start arguments EOL methods

   19 class_start: CLASS_DEFINITION

   20 c_type_definition: c_type_start EOL C_members_definition

   21 c_type_start: C_TYPE_DEFINITION

   22 methods: method_definition EOL
   23        | methods method_definition EOL

   24 method_definition: METHOD_DEFINITION arguments EOL block return_value

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier EOL
   28                     | C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

   29 C_type_identifier: IDENTIFIER
   30                  | C_type_identifier IDENTIFIER

   31 return_value: RETURN expression
   32             | RETURN

   33 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   34          | LEFT_PARENTHESIS RIGHT_PARENTHESIS

   35 definition_arguments: IDENTIFIER
   36                     | definition_arguments COMMA IDENTIFIER

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

   38 global_start: GLOBAL

   39 globals_variables: assign_variable
   40                  | globals_variables EOL assign_variable

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

   43 expressions: expression
   44            | expressions COMMA expression

   45 if_start: IF

   46 else_start: ELSE

   47 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | assign_variable
   51           | expression PLUS expression
   52           | expression MINUS expression
   53           | expression ASTERISK expression
   54           | expression SLASH expression
   55           | expression OP_AND expression
   56           | expression OP_OR expression
   57           | expression OP_MORE_EQUAL expression
   58           | expression OP_LESS_EQUAL expression
   59           | expression OP_MORE expression
   60           | expression OP_LESS expression
   61           | expression OP_NOT_EQUAL expression
   62           | expression OP_EQUAL expression
   63           | monomial
   64           | list
   65           | access

   66 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | LEFT_CURLY_BRACE RIGHT_CURLY_BRACE

   68 access: expression DOT_IDENTIFIER

   69 assign_variable: IDENTIFIER EQUAL expression
   70                | access EQUAL expression

   71 monomial: call
   72         | STRING_LITERAL
   73         | FLOAT_LITERAL
   74         | INT_LITERAL
   75         | variable

   76 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | access LEFT_PARENTHESIS RIGHT_PARENTHESIS

   80 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 15
METHOD_DEFINITION (259) 24
CLASS_DEFINITION (260) 19
C_TYPE_DEFINITION (261) 21
C_FUNCTION_DECLARATION (262) 41 42
RETURN (263) 31 32
C_FUNCTION (264)
MEMBER_IDENTIFIER (265) 25 26 27 28
IDENTIFIER (266) 29 30 35 36 69 76 77 80
EQUAL (267) 25 26 27 28 69 70
OP_AND (268) 55
OP_OR (269) 56
OP_EQUAL (270) 62
OP_NOT_EQUAL (271) 61
OP_MORE_EQUAL (272) 57
OP_LESS_EQUAL (273) 58
OP_MORE (274) 59
OP_LESS (275) 60
PLUS (276) 51
MINUS (277) 52
ASTERISK (278) 53
SLASH (279) 54
DOT_IDENTIFIER (280) 68
USE (281)
COLON (282)
SEMICOLON (283)
COMMA (284) 36 44 49
LEFT_PARENTHESIS (285) 33 34 37 47 48 49 76 77 78 79
RIGHT_PARENTHESIS (286) 33 34 37 47 48 49 76 77 78 79
LEFT_CURLY_BRACE (287) 66 67
RIGHT_CURLY_BRACE (288) 66 67
LEFT_BRACKET (289)
RIGHT_BRACKET (290)
IF (291) 45
ELSE (292) 46
FOR (293) 49
IN (294)
WHILE (295)
GLOBAL (296) 38
C_FUNCTION_ARGUMENT (297) 41 42
C_FUNCTION_RETURN (298) 41 42
EOL (299) 5 14 16 17 18 20 22 23 24 25 26 27 28 37 40 41 42 47 48 49
INT_LITERAL (300) 74
FLOAT_LITERAL (301) 73
STRING_LITERAL (302) 72


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
program (49)
    on left: 1, on right: 0
block (50)
    on left: 2, on right: 1 14 24 47 48 49
lines (51)
    on left: 3 4, on right: 2 4
line (52)
    on left: 5 6 7, on right: 3 4
line_content (53)
    on left: 8, on right: 5 6
definition (54)
    on left: 9 10 11 12 13, on right: 7
function_definition (55)
    on left: 14, on right: 9
function_start (56)
    on left: 15, on right: 14
class_definition (57)
    on left: 16 17 18, on right: 10
class_start (58)
    on left: 19, on right: 16 17 18
c_type_definition (59)
    on left: 20, on right: 11
c_type_start (60)
    on left: 21, on right: 20
methods (61)
    on left: 22 23, on right: 16 18 23
method_definition (62)
    on left: 24, on right: 22 23
members_definition (63)
    on left: 25 26, on right: 16 17 26
C_members_definition (64)
    on left: 27 28, on right: 20 28
C_type_identifier (65)
    on left: 29 30, on right: 27 28 30
return_value (66)
    on left: 31 32, on right: 14 24
arguments (67)
    on left: 33 34, on right: 14 16 17 18 24
definition_arguments (68)
    on left: 35 36, on right: 33 36
globals_definition (69)
    on left: 37, on right: 12
global_start (70)
    on left: 38, on right: 37
globals_variables (71)
    on left: 39 40, on right: 37 40
c_function_declaration (72)
    on left: 41 42, on right: 13
expressions (73)
    on left: 43 44, on right: 41 44 66 76 78
if_start (74)
    on left: 45, on right: 47
else_start (75)
    on left: 46, on right: 48
expression (76)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65, on right: 8 25 26 31 41 42 43 44 47 49 51 52 53 54 55 56 57
    58 59 60 61 62 68 69 70
list (77)
    on left: 66 67, on right: 64
access (78)
    on left: 68, on right: 65 70 78 79
assign_variable (79)
    on left: 69 70, on right: 39 40 50
monomial (80)
    on left: 71 72 73 74 75, on right: 63
call (81)
    on left: 76 77 78 79, on right: 71
variable (82)
    on left: 80, on right: 75


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    program                 go to state 14
    block                   go to state 15
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 1

   15 function_start: FUNCTION_DEFINITION .

    $default  reduce using rule 15 (function_start)


State 2

   19 class_start: CLASS_DEFINITION .

    $default  reduce using rule 19 (class_start)


State 3

   21 c_type_start: C_TYPE_DEFINITION .

    $default  reduce using rule 21 (c_type_start)


State 4

   41 c_function_declaration: C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | C_FUNCTION_DECLARATION . EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

    EOL  shift, and go to state 38


State 5

   69 assign_variable: IDENTIFIER . EQUAL expression
   76 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | IDENTIFIER . LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: IDENTIFIER .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    EQUAL             shift, and go to state 39
    LEFT_PARENTHESIS  shift, and go to state 40

    $default  reduce using rule 80 (variable)


State 6

   43 expressions: . expression
   44            | . expressions COMMA expression
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   66     | LEFT_CURLY_BRACE . expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   67     | LEFT_CURLY_BRACE . RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    LEFT_CURLY_BRACE   shift, and go to state 6
    RIGHT_CURLY_BRACE  shift, and go to state 41
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 42
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 7

   45 if_start: IF .

    $default  reduce using rule 45 (if_start)


State 8

   46 else_start: ELSE .

    $default  reduce using rule 46 (else_start)


State 9

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | FOR . expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 44
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 10

   38 global_start: GLOBAL .

    $default  reduce using rule 38 (global_start)


State 11

   74 monomial: INT_LITERAL .

    $default  reduce using rule 74 (monomial)


State 12

   73 monomial: FLOAT_LITERAL .

    $default  reduce using rule 73 (monomial)


State 13

   72 monomial: STRING_LITERAL .

    $default  reduce using rule 72 (monomial)


State 14

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 45


State 15

    1 program: block .

    $default  reduce using rule 1 (program)


State 16

    2 block: lines .  ["end of file", RETURN, RIGHT_PARENTHESIS]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    $default  reduce using rule 2 (block)

    line                    go to state 46
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 17

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 18

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 47
    EOL            shift, and go to state 48


State 19

    7 line: definition .

    $default  reduce using rule 7 (line)


State 20

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 21

   14 function_definition: function_start . arguments EOL block return_value EOL
   33 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   34          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 50


State 22

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 23

   16 class_definition: class_start . arguments EOL members_definition methods
   17                 | class_start . arguments EOL members_definition
   18                 | class_start . arguments EOL methods
   33 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   34          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 51


State 24

   11 definition: c_type_definition .

    $default  reduce using rule 11 (definition)


State 25

   20 c_type_definition: c_type_start . EOL C_members_definition

    EOL  shift, and go to state 52


State 26

   12 definition: globals_definition .

    $default  reduce using rule 12 (definition)


State 27

   37 globals_definition: global_start . EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 53


State 28

   13 definition: c_function_declaration .

    $default  reduce using rule 13 (definition)


State 29

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | if_start . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 54
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 30

   48 expression: else_start . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 55


State 31

    8 line_content: expression .  ["end of file", EOL]
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 8 (line_content)


State 32

   64 expression: list .

    $default  reduce using rule 64 (expression)


State 33

   65 expression: access .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   70 assign_variable: access . EQUAL expression
   78 call: access . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | access . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    EQUAL             shift, and go to state 69
    LEFT_PARENTHESIS  shift, and go to state 70

    $default  reduce using rule 65 (expression)


State 34

   50 expression: assign_variable .

    $default  reduce using rule 50 (expression)


State 35

   63 expression: monomial .

    $default  reduce using rule 63 (expression)


State 36

   71 monomial: call .

    $default  reduce using rule 71 (monomial)


State 37

   75 monomial: variable .

    $default  reduce using rule 75 (monomial)


State 38

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | C_FUNCTION_DECLARATION EOL . C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL

    C_FUNCTION_ARGUMENT  shift, and go to state 71


State 39

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   69                | IDENTIFIER EQUAL . expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 72
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 40

   43 expressions: . expression
   44            | . expressions COMMA expression
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   76     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   77     | IDENTIFIER LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 73
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 74
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 41

   67 list: LEFT_CURLY_BRACE RIGHT_CURLY_BRACE .

    $default  reduce using rule 67 (list)


State 42

   44 expressions: expressions . COMMA expression
   66 list: LEFT_CURLY_BRACE expressions . RIGHT_CURLY_BRACE

    COMMA              shift, and go to state 75
    RIGHT_CURLY_BRACE  shift, and go to state 76


State 43

   43 expressions: expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 43 (expressions)


State 44

   49 expression: FOR expression . COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 77


State 45

    0 $accept: program "end of file" .

    $default  accept


State 46

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 47

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 48

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 49

   33 arguments: LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS
   34          | LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   35 definition_arguments: . IDENTIFIER
   36                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER         shift, and go to state 78
    RIGHT_PARENTHESIS  shift, and go to state 79

    definition_arguments  go to state 80


State 50

   14 function_definition: function_start arguments . EOL block return_value EOL

    EOL  shift, and go to state 81


State 51

   16 class_definition: class_start arguments . EOL members_definition methods
   17                 | class_start arguments . EOL members_definition
   18                 | class_start arguments . EOL methods

    EOL  shift, and go to state 82


State 52

   20 c_type_definition: c_type_start EOL . C_members_definition
   27 C_members_definition: . MEMBER_IDENTIFIER EQUAL C_type_identifier EOL
   28                     | . C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

    MEMBER_IDENTIFIER  shift, and go to state 83

    C_members_definition  go to state 84


State 53

   37 globals_definition: global_start EOL . LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    LEFT_PARENTHESIS  shift, and go to state 85


State 54

   47 expression: if_start expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 86


State 55

   48 expression: else_start EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 87


State 56

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   55           | expression OP_AND . expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 88
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 57

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   56           | expression OP_OR . expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 89
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 58

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   62           | expression OP_EQUAL . expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 90
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 59

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   61           | expression OP_NOT_EQUAL . expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 91
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 60

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   57           | expression OP_MORE_EQUAL . expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 92
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 61

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   58           | expression OP_LESS_EQUAL . expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 93
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 62

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   59           | expression OP_MORE . expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 94
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 63

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   60           | expression OP_LESS . expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 95
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 64

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   51           | expression PLUS . expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 96
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 65

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   52           | expression MINUS . expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 97
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 66

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   53           | expression ASTERISK . expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 98
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 67

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   54           | expression SLASH . expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 99
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 68

   68 access: expression DOT_IDENTIFIER .

    $default  reduce using rule 68 (access)


State 69

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   70                | access EQUAL . expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 100
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 70

   43 expressions: . expression
   44            | . expressions COMMA expression
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   78     | access LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   79     | access LEFT_PARENTHESIS . RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 101
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    expressions      go to state 102
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 71

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT . EOL C_FUNCTION_RETURN expression EOL
   43 expressions: . expression
   44            | . expressions COMMA expression
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    EOL               shift, and go to state 103
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    expressions      go to state 104
    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 43
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 72

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER
   69 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 69 (assign_variable)

    Conflict between rule 69 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 69 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 69 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 69 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 69 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 69 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 69 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 69 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 69 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 69 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 69 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 69 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 69 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 73

   77 call: IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 77 (call)


State 74

   44 expressions: expressions . COMMA expression
   76 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 105


State 75

   44 expressions: expressions COMMA . expression
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 106
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 76

   66 list: LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE .

    $default  reduce using rule 66 (list)


State 77

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | FOR expression COMMA . expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 107
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 78

   35 definition_arguments: IDENTIFIER .

    $default  reduce using rule 35 (definition_arguments)


State 79

   34 arguments: LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 34 (arguments)


State 80

   33 arguments: LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS
   36 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 108
    RIGHT_PARENTHESIS  shift, and go to state 109


State 81

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   14                    | function_start arguments EOL . block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 110
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 82

   16 class_definition: class_start arguments EOL . members_definition methods
   17                 | class_start arguments EOL . members_definition
   18                 | class_start arguments EOL . methods
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value
   25 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   26                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 111
    MEMBER_IDENTIFIER  shift, and go to state 112

    methods             go to state 113
    method_definition   go to state 114
    members_definition  go to state 115


State 83

   27 C_members_definition: MEMBER_IDENTIFIER . EQUAL C_type_identifier EOL

    EQUAL  shift, and go to state 116


State 84

   20 c_type_definition: c_type_start EOL C_members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   28 C_members_definition: C_members_definition . MEMBER_IDENTIFIER EQUAL C_type_identifier EOL

    MEMBER_IDENTIFIER  shift, and go to state 117

    $default  reduce using rule 20 (c_type_definition)


State 85

   37 globals_definition: global_start EOL LEFT_PARENTHESIS . EOL globals_variables EOL RIGHT_PARENTHESIS EOL

    EOL  shift, and go to state 118


State 86

   47 expression: if_start expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 119


State 87

   48 expression: else_start EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 120


State 88

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   55           | expression OP_AND expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 55 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 55 and token OP_EQUAL resolved as shift (OP_AND < OP_EQUAL).
    Conflict between rule 55 and token OP_NOT_EQUAL resolved as shift (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 55 and token OP_MORE_EQUAL resolved as shift (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 55 and token OP_LESS_EQUAL resolved as shift (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 55 and token OP_MORE resolved as shift (OP_AND < OP_MORE).
    Conflict between rule 55 and token OP_LESS resolved as shift (OP_AND < OP_LESS).
    Conflict between rule 55 and token PLUS resolved as shift (OP_AND < PLUS).
    Conflict between rule 55 and token MINUS resolved as shift (OP_AND < MINUS).
    Conflict between rule 55 and token ASTERISK resolved as shift (OP_AND < ASTERISK).
    Conflict between rule 55 and token SLASH resolved as shift (OP_AND < SLASH).
    Conflict between rule 55 and token DOT_IDENTIFIER resolved as shift (OP_AND < DOT_IDENTIFIER).


State 89

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   56           | expression OP_OR expression .  ["end of file", OP_AND, OP_OR, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 56 and token OP_OR resolved as reduce (%left OP_OR).
    Conflict between rule 56 and token OP_EQUAL resolved as shift (OP_OR < OP_EQUAL).
    Conflict between rule 56 and token OP_NOT_EQUAL resolved as shift (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 56 and token OP_MORE_EQUAL resolved as shift (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 56 and token OP_LESS_EQUAL resolved as shift (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 56 and token OP_MORE resolved as shift (OP_OR < OP_MORE).
    Conflict between rule 56 and token OP_LESS resolved as shift (OP_OR < OP_LESS).
    Conflict between rule 56 and token PLUS resolved as shift (OP_OR < PLUS).
    Conflict between rule 56 and token MINUS resolved as shift (OP_OR < MINUS).
    Conflict between rule 56 and token ASTERISK resolved as shift (OP_OR < ASTERISK).
    Conflict between rule 56 and token SLASH resolved as shift (OP_OR < SLASH).
    Conflict between rule 56 and token DOT_IDENTIFIER resolved as shift (OP_OR < DOT_IDENTIFIER).


State 90

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   62           | expression OP_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token OP_AND resolved as reduce (OP_AND < OP_EQUAL).
    Conflict between rule 62 and token OP_OR resolved as reduce (OP_OR < OP_EQUAL).
    Conflict between rule 62 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 62 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 62 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 62 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 62 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 62 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 62 and token PLUS resolved as shift (OP_EQUAL < PLUS).
    Conflict between rule 62 and token MINUS resolved as shift (OP_EQUAL < MINUS).
    Conflict between rule 62 and token ASTERISK resolved as shift (OP_EQUAL < ASTERISK).
    Conflict between rule 62 and token SLASH resolved as shift (OP_EQUAL < SLASH).
    Conflict between rule 62 and token DOT_IDENTIFIER resolved as shift (OP_EQUAL < DOT_IDENTIFIER).


State 91

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   61           | expression OP_NOT_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 61 (expression)

    Conflict between rule 61 and token OP_AND resolved as reduce (OP_AND < OP_NOT_EQUAL).
    Conflict between rule 61 and token OP_OR resolved as reduce (OP_OR < OP_NOT_EQUAL).
    Conflict between rule 61 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 61 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 61 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 61 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 61 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 61 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 61 and token PLUS resolved as shift (OP_NOT_EQUAL < PLUS).
    Conflict between rule 61 and token MINUS resolved as shift (OP_NOT_EQUAL < MINUS).
    Conflict between rule 61 and token ASTERISK resolved as shift (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 61 and token SLASH resolved as shift (OP_NOT_EQUAL < SLASH).
    Conflict between rule 61 and token DOT_IDENTIFIER resolved as shift (OP_NOT_EQUAL < DOT_IDENTIFIER).


State 92

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   57           | expression OP_MORE_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token OP_AND resolved as reduce (OP_AND < OP_MORE_EQUAL).
    Conflict between rule 57 and token OP_OR resolved as reduce (OP_OR < OP_MORE_EQUAL).
    Conflict between rule 57 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 57 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 57 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 57 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 57 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 57 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 57 and token PLUS resolved as shift (OP_MORE_EQUAL < PLUS).
    Conflict between rule 57 and token MINUS resolved as shift (OP_MORE_EQUAL < MINUS).
    Conflict between rule 57 and token ASTERISK resolved as shift (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 57 and token SLASH resolved as shift (OP_MORE_EQUAL < SLASH).
    Conflict between rule 57 and token DOT_IDENTIFIER resolved as shift (OP_MORE_EQUAL < DOT_IDENTIFIER).


State 93

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   58           | expression OP_LESS_EQUAL expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token OP_AND resolved as reduce (OP_AND < OP_LESS_EQUAL).
    Conflict between rule 58 and token OP_OR resolved as reduce (OP_OR < OP_LESS_EQUAL).
    Conflict between rule 58 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 58 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 58 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 58 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 58 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 58 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 58 and token PLUS resolved as shift (OP_LESS_EQUAL < PLUS).
    Conflict between rule 58 and token MINUS resolved as shift (OP_LESS_EQUAL < MINUS).
    Conflict between rule 58 and token ASTERISK resolved as shift (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 58 and token SLASH resolved as shift (OP_LESS_EQUAL < SLASH).
    Conflict between rule 58 and token DOT_IDENTIFIER resolved as shift (OP_LESS_EQUAL < DOT_IDENTIFIER).


State 94

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   59           | expression OP_MORE expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token OP_AND resolved as reduce (OP_AND < OP_MORE).
    Conflict between rule 59 and token OP_OR resolved as reduce (OP_OR < OP_MORE).
    Conflict between rule 59 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 59 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 59 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 59 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 59 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 59 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 59 and token PLUS resolved as shift (OP_MORE < PLUS).
    Conflict between rule 59 and token MINUS resolved as shift (OP_MORE < MINUS).
    Conflict between rule 59 and token ASTERISK resolved as shift (OP_MORE < ASTERISK).
    Conflict between rule 59 and token SLASH resolved as shift (OP_MORE < SLASH).
    Conflict between rule 59 and token DOT_IDENTIFIER resolved as shift (OP_MORE < DOT_IDENTIFIER).


State 95

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   60           | expression OP_LESS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token OP_AND resolved as reduce (OP_AND < OP_LESS).
    Conflict between rule 60 and token OP_OR resolved as reduce (OP_OR < OP_LESS).
    Conflict between rule 60 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 60 and token OP_NOT_EQUAL resolved as reduce (%left OP_NOT_EQUAL).
    Conflict between rule 60 and token OP_MORE_EQUAL resolved as reduce (%left OP_MORE_EQUAL).
    Conflict between rule 60 and token OP_LESS_EQUAL resolved as reduce (%left OP_LESS_EQUAL).
    Conflict between rule 60 and token OP_MORE resolved as reduce (%left OP_MORE).
    Conflict between rule 60 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 60 and token PLUS resolved as shift (OP_LESS < PLUS).
    Conflict between rule 60 and token MINUS resolved as shift (OP_LESS < MINUS).
    Conflict between rule 60 and token ASTERISK resolved as shift (OP_LESS < ASTERISK).
    Conflict between rule 60 and token SLASH resolved as shift (OP_LESS < SLASH).
    Conflict between rule 60 and token DOT_IDENTIFIER resolved as shift (OP_LESS < DOT_IDENTIFIER).


State 96

   51 expression: expression . PLUS expression
   51           | expression PLUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token OP_AND resolved as reduce (OP_AND < PLUS).
    Conflict between rule 51 and token OP_OR resolved as reduce (OP_OR < PLUS).
    Conflict between rule 51 and token OP_EQUAL resolved as reduce (OP_EQUAL < PLUS).
    Conflict between rule 51 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < PLUS).
    Conflict between rule 51 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < PLUS).
    Conflict between rule 51 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < PLUS).
    Conflict between rule 51 and token OP_MORE resolved as reduce (OP_MORE < PLUS).
    Conflict between rule 51 and token OP_LESS resolved as reduce (OP_LESS < PLUS).
    Conflict between rule 51 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 51 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 51 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 51 and token SLASH resolved as shift (PLUS < SLASH).
    Conflict between rule 51 and token DOT_IDENTIFIER resolved as shift (PLUS < DOT_IDENTIFIER).


State 97

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   52           | expression MINUS expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token OP_AND resolved as reduce (OP_AND < MINUS).
    Conflict between rule 52 and token OP_OR resolved as reduce (OP_OR < MINUS).
    Conflict between rule 52 and token OP_EQUAL resolved as reduce (OP_EQUAL < MINUS).
    Conflict between rule 52 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < MINUS).
    Conflict between rule 52 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < MINUS).
    Conflict between rule 52 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < MINUS).
    Conflict between rule 52 and token OP_MORE resolved as reduce (OP_MORE < MINUS).
    Conflict between rule 52 and token OP_LESS resolved as reduce (OP_LESS < MINUS).
    Conflict between rule 52 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 52 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 52 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 52 and token SLASH resolved as shift (MINUS < SLASH).
    Conflict between rule 52 and token DOT_IDENTIFIER resolved as shift (MINUS < DOT_IDENTIFIER).


State 98

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   53           | expression ASTERISK expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token OP_AND resolved as reduce (OP_AND < ASTERISK).
    Conflict between rule 53 and token OP_OR resolved as reduce (OP_OR < ASTERISK).
    Conflict between rule 53 and token OP_EQUAL resolved as reduce (OP_EQUAL < ASTERISK).
    Conflict between rule 53 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < ASTERISK).
    Conflict between rule 53 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < ASTERISK).
    Conflict between rule 53 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < ASTERISK).
    Conflict between rule 53 and token OP_MORE resolved as reduce (OP_MORE < ASTERISK).
    Conflict between rule 53 and token OP_LESS resolved as reduce (OP_LESS < ASTERISK).
    Conflict between rule 53 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 53 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 53 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 53 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 53 and token DOT_IDENTIFIER resolved as shift (ASTERISK < DOT_IDENTIFIER).


State 99

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   54           | expression SLASH expression .  ["end of file", OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token OP_AND resolved as reduce (OP_AND < SLASH).
    Conflict between rule 54 and token OP_OR resolved as reduce (OP_OR < SLASH).
    Conflict between rule 54 and token OP_EQUAL resolved as reduce (OP_EQUAL < SLASH).
    Conflict between rule 54 and token OP_NOT_EQUAL resolved as reduce (OP_NOT_EQUAL < SLASH).
    Conflict between rule 54 and token OP_MORE_EQUAL resolved as reduce (OP_MORE_EQUAL < SLASH).
    Conflict between rule 54 and token OP_LESS_EQUAL resolved as reduce (OP_LESS_EQUAL < SLASH).
    Conflict between rule 54 and token OP_MORE resolved as reduce (OP_MORE < SLASH).
    Conflict between rule 54 and token OP_LESS resolved as reduce (OP_LESS < SLASH).
    Conflict between rule 54 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 54 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 54 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 54 and token SLASH resolved as reduce (%left SLASH).
    Conflict between rule 54 and token DOT_IDENTIFIER resolved as shift (SLASH < DOT_IDENTIFIER).


State 100

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER
   70 assign_variable: access EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 70 (assign_variable)

    Conflict between rule 70 and token OP_AND resolved as shift (EQUAL < OP_AND).
    Conflict between rule 70 and token OP_OR resolved as shift (EQUAL < OP_OR).
    Conflict between rule 70 and token OP_EQUAL resolved as shift (EQUAL < OP_EQUAL).
    Conflict between rule 70 and token OP_NOT_EQUAL resolved as shift (EQUAL < OP_NOT_EQUAL).
    Conflict between rule 70 and token OP_MORE_EQUAL resolved as shift (EQUAL < OP_MORE_EQUAL).
    Conflict between rule 70 and token OP_LESS_EQUAL resolved as shift (EQUAL < OP_LESS_EQUAL).
    Conflict between rule 70 and token OP_MORE resolved as shift (EQUAL < OP_MORE).
    Conflict between rule 70 and token OP_LESS resolved as shift (EQUAL < OP_LESS).
    Conflict between rule 70 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 70 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 70 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 70 and token SLASH resolved as shift (EQUAL < SLASH).
    Conflict between rule 70 and token DOT_IDENTIFIER resolved as shift (EQUAL < DOT_IDENTIFIER).


State 101

   79 call: access LEFT_PARENTHESIS RIGHT_PARENTHESIS .

    $default  reduce using rule 79 (call)


State 102

   44 expressions: expressions . COMMA expression
   78 call: access LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 75
    RIGHT_PARENTHESIS  shift, and go to state 121


State 103

   42 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL . C_FUNCTION_RETURN expression EOL

    C_FUNCTION_RETURN  shift, and go to state 122


State 104

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions . EOL C_FUNCTION_RETURN expression EOL
   44 expressions: expressions . COMMA expression

    COMMA  shift, and go to state 75
    EOL    shift, and go to state 123


State 105

   76 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 76 (call)


State 106

   44 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS, RIGHT_CURLY_BRACE, EOL]
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 44 (expressions)


State 107

   49 expression: FOR expression COMMA expression . COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    COMMA           shift, and go to state 124


State 108

   36 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 125


State 109

   33 arguments: LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS .

    $default  reduce using rule 33 (arguments)


State 110

   14 function_definition: function_start arguments EOL block . return_value EOL
   31 return_value: . RETURN expression
   32             | . RETURN

    RETURN  shift, and go to state 126

    return_value  go to state 127


State 111

   24 method_definition: METHOD_DEFINITION . arguments EOL block return_value
   33 arguments: . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS
   34          | . LEFT_PARENTHESIS RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 49

    arguments  go to state 128


State 112

   25 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 129


State 113

   18 class_definition: class_start arguments EOL methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value

    METHOD_DEFINITION  shift, and go to state 111

    $default  reduce using rule 18 (class_definition)

    method_definition  go to state 130


State 114

   22 methods: method_definition . EOL

    EOL  shift, and go to state 131


State 115

   16 class_definition: class_start arguments EOL members_definition . methods
   17                 | class_start arguments EOL members_definition .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   22 methods: . method_definition EOL
   23        | . methods method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value
   26 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 111
    MEMBER_IDENTIFIER  shift, and go to state 132

    $default  reduce using rule 17 (class_definition)

    methods            go to state 133
    method_definition  go to state 114


State 116

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL . C_type_identifier EOL
   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER

    IDENTIFIER  shift, and go to state 134

    C_type_identifier  go to state 135


State 117

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER . EQUAL C_type_identifier EOL

    EQUAL  shift, and go to state 136


State 118

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL . globals_variables EOL RIGHT_PARENTHESIS EOL
   39 globals_variables: . assign_variable
   40                  | . globals_variables EOL assign_variable
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    globals_variables  go to state 137
    if_start           go to state 29
    else_start         go to state 30
    expression         go to state 138
    list               go to state 32
    access             go to state 33
    assign_variable    go to state 139
    monomial           go to state 35
    call               go to state 36
    variable           go to state 37


State 119

   47 expression: if_start expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 140


State 120

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | else_start EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 141
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 121

   78 call: access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 78 (call)


State 122

   42 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN . expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 142
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 123

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL . C_FUNCTION_RETURN expression EOL

    C_FUNCTION_RETURN  shift, and go to state 143


State 124

   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | FOR expression COMMA expression COMMA . expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 144
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 125

   36 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 36 (definition_arguments)


State 126

   31 return_value: RETURN . expression
   32             | RETURN .  [EOL]
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    $default  reduce using rule 32 (return_value)

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 145
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 127

   14 function_definition: function_start arguments EOL block return_value . EOL

    EOL  shift, and go to state 146


State 128

   24 method_definition: METHOD_DEFINITION arguments . EOL block return_value

    EOL  shift, and go to state 147


State 129

   25 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 148
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 130

   23 methods: methods method_definition . EOL

    EOL  shift, and go to state 149


State 131

   22 methods: method_definition EOL .

    $default  reduce using rule 22 (methods)


State 132

   26 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 150


State 133

   16 class_definition: class_start arguments EOL members_definition methods .  ["end of file", FUNCTION_DEFINITION, CLASS_DEFINITION, C_TYPE_DEFINITION, C_FUNCTION_DECLARATION, RETURN, IDENTIFIER, RIGHT_PARENTHESIS, LEFT_CURLY_BRACE, IF, ELSE, FOR, GLOBAL, INT_LITERAL, FLOAT_LITERAL, STRING_LITERAL]
   23 methods: methods . method_definition EOL
   24 method_definition: . METHOD_DEFINITION arguments EOL block return_value

    METHOD_DEFINITION  shift, and go to state 111

    $default  reduce using rule 16 (class_definition)

    method_definition  go to state 130


State 134

   29 C_type_identifier: IDENTIFIER .

    $default  reduce using rule 29 (C_type_identifier)


State 135

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier . EOL
   30 C_type_identifier: C_type_identifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 151
    EOL         shift, and go to state 152


State 136

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL . C_type_identifier EOL
   29 C_type_identifier: . IDENTIFIER
   30                  | . C_type_identifier IDENTIFIER

    IDENTIFIER  shift, and go to state 134

    C_type_identifier  go to state 153


State 137

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables . EOL RIGHT_PARENTHESIS EOL
   40 globals_variables: globals_variables . EOL assign_variable

    EOL  shift, and go to state 154


State 138

   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68


State 139

   39 globals_variables: assign_variable .  [EOL]
   50 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 39 (globals_variables)
    $default  reduce using rule 50 (expression)


State 140

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   47           | if_start expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 155
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 141

   48 expression: else_start EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 156


State 142

   42 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression . EOL
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 157


State 143

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN . expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 158
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 144

   49 expression: FOR expression COMMA expression COMMA expression . EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   51           | expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 159


State 145

   31 return_value: RETURN expression .  [EOL]
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68

    $default  reduce using rule 31 (return_value)


State 146

   14 function_definition: function_start arguments EOL block return_value EOL .

    $default  reduce using rule 14 (function_definition)


State 147

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   24 method_definition: METHOD_DEFINITION arguments EOL . block return_value
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 160
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 148

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 161


State 149

   23 methods: methods method_definition EOL .

    $default  reduce using rule 23 (methods)


State 150

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER        shift, and go to state 5
    LEFT_CURLY_BRACE  shift, and go to state 6
    IF                shift, and go to state 7
    ELSE              shift, and go to state 8
    FOR               shift, and go to state 9
    INT_LITERAL       shift, and go to state 11
    FLOAT_LITERAL     shift, and go to state 12
    STRING_LITERAL    shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 162
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 34
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 151

   30 C_type_identifier: C_type_identifier IDENTIFIER .

    $default  reduce using rule 30 (C_type_identifier)


State 152

   27 C_members_definition: MEMBER_IDENTIFIER EQUAL C_type_identifier EOL .

    $default  reduce using rule 27 (C_members_definition)


State 153

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier . EOL
   30 C_type_identifier: C_type_identifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 151
    EOL         shift, and go to state 163


State 154

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL . RIGHT_PARENTHESIS EOL
   40 globals_variables: globals_variables EOL . assign_variable
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    IDENTIFIER         shift, and go to state 5
    RIGHT_PARENTHESIS  shift, and go to state 164
    LEFT_CURLY_BRACE   shift, and go to state 6
    IF                 shift, and go to state 7
    ELSE               shift, and go to state 8
    FOR                shift, and go to state 9
    INT_LITERAL        shift, and go to state 11
    FLOAT_LITERAL      shift, and go to state 12
    STRING_LITERAL     shift, and go to state 13

    if_start         go to state 29
    else_start       go to state 30
    expression       go to state 138
    list             go to state 32
    access           go to state 33
    assign_variable  go to state 165
    monomial         go to state 35
    call             go to state 36
    variable         go to state 37


State 155

   47 expression: if_start expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 166


State 156

   48 expression: else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 48 (expression)


State 157

   42 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL .

    $default  reduce using rule 42 (c_function_declaration)


State 158

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression . EOL
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 167


State 159

   49 expression: FOR expression COMMA expression COMMA expression EOL . LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 168


State 160

   24 method_definition: METHOD_DEFINITION arguments EOL block . return_value
   31 return_value: . RETURN expression
   32             | . RETURN

    RETURN  shift, and go to state 126

    return_value  go to state 169


State 161

   25 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 25 (members_definition)


State 162

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   51 expression: expression . PLUS expression
   52           | expression . MINUS expression
   53           | expression . ASTERISK expression
   54           | expression . SLASH expression
   55           | expression . OP_AND expression
   56           | expression . OP_OR expression
   57           | expression . OP_MORE_EQUAL expression
   58           | expression . OP_LESS_EQUAL expression
   59           | expression . OP_MORE expression
   60           | expression . OP_LESS expression
   61           | expression . OP_NOT_EQUAL expression
   62           | expression . OP_EQUAL expression
   68 access: expression . DOT_IDENTIFIER

    OP_AND          shift, and go to state 56
    OP_OR           shift, and go to state 57
    OP_EQUAL        shift, and go to state 58
    OP_NOT_EQUAL    shift, and go to state 59
    OP_MORE_EQUAL   shift, and go to state 60
    OP_LESS_EQUAL   shift, and go to state 61
    OP_MORE         shift, and go to state 62
    OP_LESS         shift, and go to state 63
    PLUS            shift, and go to state 64
    MINUS           shift, and go to state 65
    ASTERISK        shift, and go to state 66
    SLASH           shift, and go to state 67
    DOT_IDENTIFIER  shift, and go to state 68
    EOL             shift, and go to state 170


State 163

   28 C_members_definition: C_members_definition MEMBER_IDENTIFIER EQUAL C_type_identifier EOL .

    $default  reduce using rule 28 (C_members_definition)


State 164

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS . EOL

    EOL  shift, and go to state 171


State 165

   40 globals_variables: globals_variables EOL assign_variable .  [EOL]
   50 expression: assign_variable .  [OP_AND, OP_OR, OP_EQUAL, OP_NOT_EQUAL, OP_MORE_EQUAL, OP_LESS_EQUAL, OP_MORE, OP_LESS, PLUS, MINUS, ASTERISK, SLASH, DOT_IDENTIFIER]

    EOL       reduce using rule 40 (globals_variables)
    $default  reduce using rule 50 (expression)


State 166

   47 expression: if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 47 (expression)


State 167

   41 c_function_declaration: C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL .

    $default  reduce using rule 41 (c_function_declaration)


State 168

   49 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS . EOL block RIGHT_PARENTHESIS

    EOL  shift, and go to state 172


State 169

   24 method_definition: METHOD_DEFINITION arguments EOL block return_value .

    $default  reduce using rule 24 (method_definition)


State 170

   26 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 26 (members_definition)


State 171

   37 globals_definition: global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL .

    $default  reduce using rule 37 (globals_definition)


State 172

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7     | . definition
    8 line_content: . expression
    9 definition: . function_definition
   10           | . class_definition
   11           | . c_type_definition
   12           | . globals_definition
   13           | . c_function_declaration
   14 function_definition: . function_start arguments EOL block return_value EOL
   15 function_start: . FUNCTION_DEFINITION
   16 class_definition: . class_start arguments EOL members_definition methods
   17                 | . class_start arguments EOL members_definition
   18                 | . class_start arguments EOL methods
   19 class_start: . CLASS_DEFINITION
   20 c_type_definition: . c_type_start EOL C_members_definition
   21 c_type_start: . C_TYPE_DEFINITION
   37 globals_definition: . global_start EOL LEFT_PARENTHESIS EOL globals_variables EOL RIGHT_PARENTHESIS EOL
   38 global_start: . GLOBAL
   41 c_function_declaration: . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT expressions EOL C_FUNCTION_RETURN expression EOL
   42                       | . C_FUNCTION_DECLARATION EOL C_FUNCTION_ARGUMENT EOL C_FUNCTION_RETURN expression EOL
   45 if_start: . IF
   46 else_start: . ELSE
   47 expression: . if_start expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   48           | . else_start EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | . FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS
   49           | FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL . block RIGHT_PARENTHESIS
   50           | . assign_variable
   51           | . expression PLUS expression
   52           | . expression MINUS expression
   53           | . expression ASTERISK expression
   54           | . expression SLASH expression
   55           | . expression OP_AND expression
   56           | . expression OP_OR expression
   57           | . expression OP_MORE_EQUAL expression
   58           | . expression OP_LESS_EQUAL expression
   59           | . expression OP_MORE expression
   60           | . expression OP_LESS expression
   61           | . expression OP_NOT_EQUAL expression
   62           | . expression OP_EQUAL expression
   63           | . monomial
   64           | . list
   65           | . access
   66 list: . LEFT_CURLY_BRACE expressions RIGHT_CURLY_BRACE
   67     | . LEFT_CURLY_BRACE RIGHT_CURLY_BRACE
   68 access: . expression DOT_IDENTIFIER
   69 assign_variable: . IDENTIFIER EQUAL expression
   70                | . access EQUAL expression
   71 monomial: . call
   72         | . STRING_LITERAL
   73         | . FLOAT_LITERAL
   74         | . INT_LITERAL
   75         | . variable
   76 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   77     | . IDENTIFIER LEFT_PARENTHESIS RIGHT_PARENTHESIS
   78     | . access LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   79     | . access LEFT_PARENTHESIS RIGHT_PARENTHESIS
   80 variable: . IDENTIFIER

    FUNCTION_DEFINITION     shift, and go to state 1
    CLASS_DEFINITION        shift, and go to state 2
    C_TYPE_DEFINITION       shift, and go to state 3
    C_FUNCTION_DECLARATION  shift, and go to state 4
    IDENTIFIER              shift, and go to state 5
    LEFT_CURLY_BRACE        shift, and go to state 6
    IF                      shift, and go to state 7
    ELSE                    shift, and go to state 8
    FOR                     shift, and go to state 9
    GLOBAL                  shift, and go to state 10
    INT_LITERAL             shift, and go to state 11
    FLOAT_LITERAL           shift, and go to state 12
    STRING_LITERAL          shift, and go to state 13

    block                   go to state 173
    lines                   go to state 16
    line                    go to state 17
    line_content            go to state 18
    definition              go to state 19
    function_definition     go to state 20
    function_start          go to state 21
    class_definition        go to state 22
    class_start             go to state 23
    c_type_definition       go to state 24
    c_type_start            go to state 25
    globals_definition      go to state 26
    global_start            go to state 27
    c_function_declaration  go to state 28
    if_start                go to state 29
    else_start              go to state 30
    expression              go to state 31
    list                    go to state 32
    access                  go to state 33
    assign_variable         go to state 34
    monomial                go to state 35
    call                    go to state 36
    variable                go to state 37


State 173

   49 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 174


State 174

   49 expression: FOR expression COMMA expression COMMA expression EOL LEFT_PARENTHESIS EOL block RIGHT_PARENTHESIS .

    $default  reduce using rule 49 (expression)

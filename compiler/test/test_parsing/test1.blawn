class List(element)
    @size = 0
    @allocated_size = 1
    @element_size = sizeof(element)
    @array = {}
    @function resize()
        self.allocated_size = self.allocated_size * 2
        self.array = blawn_realloc(self.array,self.element_size,self.allocated_size)
        return
    @function append(new_element)
        
        if self.size + 1 >= self.allocated_size
        (   
            self.resize()
        )
        blawn_memcpy(self.array , self.size , self.element_size,new_element)
        self.size = self.size + 1
        return


class Person(name)
    @name = name
    @function hello(s)
        text = "Hello! I'm "
        text.append(self.name)
        print(text)
        print(s)
        return
    @function m()
        print("call m")
        return
    @function mm()
        print("call mm")
        print(self.i.s)
        return


class V()
    @n = 0
    @nn = 0.0
    @nnn = 0.0

v1 = V()
v2 = V()
print(int_to_str(typeid(v1)))
print(int_to_str(typeid(v2)))
print(int_to_str(typeid("")))
print(float_to_str(0.012324))
list = List(v1)
list.append(v2)
list.append(v2)
for i = 0 ,i < 1000000 ,i = i+1
(
    list.append(v1)
    list.append(v2)
    list.append("aaa")
)
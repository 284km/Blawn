Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   FOR
   WHILE
   STRING_LITERAL


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"

    7 line_content: expression
    8             | definition

    9 definition: function_definition
   10           | class_definition

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods

   13 methods: method_definition
   14        | methods method_definition

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

   16 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   17                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   18 definition_arguments: IDENTIFIER
   19                     | definition_arguments COMMA IDENTIFIER

   20 expressions: expression
   21            | expressions COMMA expression

   22 expression: IF expression EOL block SEMICOLON
   23           | ELSE EOL block SEMICOLON
   24           | monomial
   25           | assign_variable
   26           | expression PLUS expression
   27           | expression MINUS expression
   28           | expression ASTERISK expression
   29           | expression SLASH expression

   30 assign_variable: IDENTIFIER EQUAL expression

   31 monomial: call
   32         | FLOAT_LITERAL
   33         | INT_LITERAL
   34         | variable

   35 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS

   36 variable: IDENTIFIER
   37         | accessing

   38 accessing: IDENTIFIER DOT IDENTIFIER
   39          | accessing DOT IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 11
METHOD_DEFINITION (259) 15
CLASS_DEFINITION (260) 12
RETURN (261) 11 15
C_FUNCTION (262)
MEMBER_IDENTIFIER (263) 16 17
IDENTIFIER (264) 18 19 30 35 36 38 39
EQUAL (265) 16 17 30
PLUS (266) 26
MINUS (267) 27
ASTERISK (268) 28
SLASH (269) 29
USE (270)
DOT (271) 38 39
COLON (272)
SEMICOLON (273) 22 23
COMMA (274) 19 21
LEFT_PARENTHESIS (275) 11 12 15 35
RIGHT_PARENTHESIS (276) 11 12 15 35
IF (277) 22
ELSE (278) 23
FOR (279)
WHILE (280)
EOL (281) 5 11 12 15 16 17 22 23
INT_LITERAL (282) 33
FLOAT_LITERAL (283) 32
STRING_LITERAL (284)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
program (31)
    on left: 1, on right: 0
block (32)
    on left: 2, on right: 1 22 23
lines (33)
    on left: 3 4, on right: 2 4 11 15
line (34)
    on left: 5 6, on right: 3 4
line_content (35)
    on left: 7 8, on right: 5 6
definition (36)
    on left: 9 10, on right: 8
function_definition (37)
    on left: 11, on right: 9
class_definition (38)
    on left: 12, on right: 10
methods (39)
    on left: 13 14, on right: 12 14
method_definition (40)
    on left: 15, on right: 13 14
members_definition (41)
    on left: 16 17, on right: 12 17
definition_arguments (42)
    on left: 18 19, on right: 11 12 15 19
expressions (43)
    on left: 20 21, on right: 21 35
expression (44)
    on left: 22 23 24 25 26 27 28 29, on right: 7 11 15 16 17 20 21
    22 26 27 28 29 30
assign_variable (45)
    on left: 30, on right: 25
monomial (46)
    on left: 31 32 33 34, on right: 24
call (47)
    on left: 35, on right: 31
variable (48)
    on left: 36 37, on right: 34
accessing (49)
    on left: 38 39, on right: 37 39


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    program              go to state 8
    block                go to state 9
    lines                go to state 10
    line                 go to state 11
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 1

   11 function_definition: FUNCTION_DEFINITION . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

    LEFT_PARENTHESIS  shift, and go to state 22


State 2

   12 class_definition: CLASS_DEFINITION . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods

    LEFT_PARENTHESIS  shift, and go to state 23


State 3

   30 assign_variable: IDENTIFIER . EQUAL expression
   35 call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: IDENTIFIER .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]
   38 accessing: IDENTIFIER . DOT IDENTIFIER

    EQUAL             shift, and go to state 24
    DOT               shift, and go to state 25
    LEFT_PARENTHESIS  shift, and go to state 26

    $default  reduce using rule 36 (variable)


State 4

   22 expression: . IF expression EOL block SEMICOLON
   22           | IF . expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 27
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 5

   23 expression: ELSE . EOL block SEMICOLON

    EOL  shift, and go to state 28


State 6

   33 monomial: INT_LITERAL .

    $default  reduce using rule 33 (monomial)


State 7

   32 monomial: FLOAT_LITERAL .

    $default  reduce using rule 32 (monomial)


State 8

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 29


State 9

    1 program: block .

    $default  reduce using rule 1 (program)


State 10

    2 block: lines .  ["end of file", SEMICOLON]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    $default  reduce using rule 2 (block)

    line                 go to state 30
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 11

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 12

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 31
    EOL            shift, and go to state 32


State 13

    8 line_content: definition .

    $default  reduce using rule 8 (line_content)


State 14

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 15

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 16

    7 line_content: expression .  ["end of file", EOL]
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 7 (line_content)


State 17

   25 expression: assign_variable .

    $default  reduce using rule 25 (expression)


State 18

   24 expression: monomial .

    $default  reduce using rule 24 (expression)


State 19

   31 monomial: call .

    $default  reduce using rule 31 (monomial)


State 20

   34 monomial: variable .

    $default  reduce using rule 34 (monomial)


State 21

   37 variable: accessing .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]
   39 accessing: accessing . DOT IDENTIFIER

    DOT  shift, and go to state 37

    $default  reduce using rule 37 (variable)


State 22

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   18 definition_arguments: . IDENTIFIER
   19                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 38

    definition_arguments  go to state 39


State 23

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   18 definition_arguments: . IDENTIFIER
   19                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 38

    definition_arguments  go to state 40


State 24

   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   30                | IDENTIFIER EQUAL . expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 41
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 25

   38 accessing: IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 42


State 26

   20 expressions: . expression
   21            | . expressions COMMA expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   35     | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expressions      go to state 43
    expression       go to state 44
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 27

   22 expression: IF expression . EOL block SEMICOLON
   26           | expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36
    EOL       shift, and go to state 45


State 28

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   23           | ELSE EOL . block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    block                go to state 46
    lines                go to state 10
    line                 go to state 11
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 29

    0 $accept: program "end of file" .

    $default  accept


State 30

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 31

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 32

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 33

   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   26           | expression PLUS . expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 47
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 34

   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   27           | expression MINUS . expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 48
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 35

   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   28           | expression ASTERISK . expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 49
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 36

   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   29           | expression SLASH . expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 50
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 37

   39 accessing: accessing DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 51


State 38

   18 definition_arguments: IDENTIFIER .

    $default  reduce using rule 18 (definition_arguments)


State 39

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS EOL lines RETURN expression
   19 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 52
    RIGHT_PARENTHESIS  shift, and go to state 53


State 40

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS EOL members_definition methods
   19 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 52
    RIGHT_PARENTHESIS  shift, and go to state 54


State 41

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression
   30 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", METHOD_DEFINITION, COMMA, RIGHT_PARENTHESIS, EOL]

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 30 (assign_variable)

    Conflict between rule 30 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 30 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 30 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 30 and token SLASH resolved as shift (EQUAL < SLASH).


State 42

   38 accessing: IDENTIFIER DOT IDENTIFIER .

    $default  reduce using rule 38 (accessing)


State 43

   21 expressions: expressions . COMMA expression
   35 call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 55
    RIGHT_PARENTHESIS  shift, and go to state 56


State 44

   20 expressions: expression .  [COMMA, RIGHT_PARENTHESIS]
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 20 (expressions)


State 45

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   22           | IF expression EOL . block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    block                go to state 57
    lines                go to state 10
    line                 go to state 11
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 46

   23 expression: ELSE EOL block . SEMICOLON

    SEMICOLON  shift, and go to state 58


State 47

   26 expression: expression . PLUS expression
   26           | expression PLUS expression .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, EOL]
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 26 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 26 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 26 and token SLASH resolved as shift (PLUS < SLASH).


State 48

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   27           | expression MINUS expression .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, EOL]
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 27 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 27 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 27 and token SLASH resolved as shift (MINUS < SLASH).


State 49

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   28           | expression ASTERISK expression .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]
   29           | expression . SLASH expression

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 28 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 28 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 28 and token SLASH resolved as reduce (%left SLASH).


State 50

   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression
   29           | expression SLASH expression .  ["end of file", METHOD_DEFINITION, PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 29 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 29 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 29 and token SLASH resolved as reduce (%left SLASH).


State 51

   39 accessing: accessing DOT IDENTIFIER .

    $default  reduce using rule 39 (accessing)


State 52

   19 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 59


State 53

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS . EOL lines RETURN expression

    EOL  shift, and go to state 60


State 54

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS . EOL members_definition methods

    EOL  shift, and go to state 61


State 55

   21 expressions: expressions COMMA . expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 62
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 56

   35 call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 35 (call)


State 57

   22 expression: IF expression EOL block . SEMICOLON

    SEMICOLON  shift, and go to state 63


State 58

   23 expression: ELSE EOL block SEMICOLON .

    $default  reduce using rule 23 (expression)


State 59

   19 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 19 (definition_arguments)


State 60

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   11                    | FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL . lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    lines                go to state 64
    line                 go to state 11
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 61

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL . members_definition methods
   16 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   17                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    MEMBER_IDENTIFIER  shift, and go to state 65

    members_definition  go to state 66


State 62

   21 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS]
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 21 (expressions)


State 63

   22 expression: IF expression EOL block SEMICOLON .

    $default  reduce using rule 22 (expression)


State 64

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   11                    | FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines . RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 67
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    line                 go to state 30
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 65

   16 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 68


State 66

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition . methods
   13 methods: . method_definition
   14        | . methods method_definition
   15 method_definition: . METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   17 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL

    METHOD_DEFINITION  shift, and go to state 69
    MEMBER_IDENTIFIER  shift, and go to state 70

    methods            go to state 71
    method_definition  go to state 72


State 67

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN . expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 73
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 68

   16 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 74
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 69

   15 method_definition: METHOD_DEFINITION . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

    LEFT_PARENTHESIS  shift, and go to state 75


State 70

   17 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 76


State 71

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods .  ["end of file", EOL]
   14 methods: methods . method_definition
   15 method_definition: . METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

    METHOD_DEFINITION  shift, and go to state 69

    $default  reduce using rule 12 (class_definition)

    method_definition  go to state 77


State 72

   13 methods: method_definition .

    $default  reduce using rule 13 (methods)


State 73

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression .  ["end of file", EOL]
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 11 (function_definition)


State 74

   16 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36
    EOL       shift, and go to state 78


State 75

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   18 definition_arguments: . IDENTIFIER
   19                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 38

    definition_arguments  go to state 79


State 76

   17 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 80
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 77

   14 methods: methods method_definition .

    $default  reduce using rule 14 (methods)


State 78

   16 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 16 (members_definition)


State 79

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS EOL lines RETURN expression
   19 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 52
    RIGHT_PARENTHESIS  shift, and go to state 81


State 80

   17 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36
    EOL       shift, and go to state 82


State 81

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS . EOL lines RETURN expression

    EOL  shift, and go to state 83


State 82

   17 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 17 (members_definition)


State 83

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL . lines RETURN expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    lines                go to state 84
    line                 go to state 11
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 84

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL members_definition methods
   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines . RETURN expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 85
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    ELSE                 shift, and go to state 5
    INT_LITERAL          shift, and go to state 6
    FLOAT_LITERAL        shift, and go to state 7

    line                 go to state 30
    line_content         go to state 12
    definition           go to state 13
    function_definition  go to state 14
    class_definition     go to state 15
    expression           go to state 16
    assign_variable      go to state 17
    monomial             go to state 18
    call                 go to state 19
    variable             go to state 20
    accessing            go to state 21


State 85

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN . expression
   22 expression: . IF expression EOL block SEMICOLON
   23           | . ELSE EOL block SEMICOLON
   24           | . monomial
   25           | . assign_variable
   26           | . expression PLUS expression
   27           | . expression MINUS expression
   28           | . expression ASTERISK expression
   29           | . expression SLASH expression
   30 assign_variable: . IDENTIFIER EQUAL expression
   31 monomial: . call
   32         | . FLOAT_LITERAL
   33         | . INT_LITERAL
   34         | . variable
   35 call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   36 variable: . IDENTIFIER
   37         | . accessing
   38 accessing: . IDENTIFIER DOT IDENTIFIER
   39          | . accessing DOT IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    ELSE           shift, and go to state 5
    INT_LITERAL    shift, and go to state 6
    FLOAT_LITERAL  shift, and go to state 7

    expression       go to state 86
    assign_variable  go to state 17
    monomial         go to state 18
    call             go to state 19
    variable         go to state 20
    accessing        go to state 21


State 86

   15 method_definition: METHOD_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression .  ["end of file", METHOD_DEFINITION, EOL]
   26 expression: expression . PLUS expression
   27           | expression . MINUS expression
   28           | expression . ASTERISK expression
   29           | expression . SLASH expression

    PLUS      shift, and go to state 33
    MINUS     shift, and go to state 34
    ASTERISK  shift, and go to state 35
    SLASH     shift, and go to state 36

    $default  reduce using rule 15 (method_definition)

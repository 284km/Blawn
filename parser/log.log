Terminals unused in grammar

   C_FUNCTION
   USE
   COLON
   SEMICOLON
   ELSE
   FOR
   WHILE
   STRING_LITERAL


Grammar

    0 $accept: program "end of file"

    1 program: block

    2 block: lines

    3 lines: line
    4      | lines line

    5 line: line_content EOL
    6     | line_content "end of file"

    7 line_content: expression
    8             | definition

    9 definition: function_definition
   10           | class_definition

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS

   13 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL
   14                   | members_definition MEMBER_IDENTIFIER EQUAL expression EOL

   15 definition_arguments: IDENTIFIER
   16                     | definition_arguments COMMA IDENTIFIER

   17 expressions: expression
   18            | expressions COMMA expression

   19 expression: IF expression EOL block
   20           | monomial
   21           | assign_variable
   22           | expression PLUS expression
   23           | expression MINUS expression
   24           | expression ASTERISK expression
   25           | expression SLASH expression

   26 assign_variable: IDENTIFIER EQUAL expression

   27 monomial: function_call
   28         | FLOAT_LITERAL
   29         | INT_LITERAL
   30         | variable

   31 function_call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS

   32 variable: IDENTIFIER


Terminals, with rules where they appear

"end of file" (0) 0 6
error (256)
FUNCTION_DEFINITION (258) 11
CLASS_DEFINITION (259) 12
RETURN (260) 11
C_FUNCTION (261)
MEMBER_IDENTIFIER (262) 13 14
IDENTIFIER (263) 15 16 26 31 32
EQUAL (264) 13 14 26
PLUS (265) 22
MINUS (266) 23
ASTERISK (267) 24
SLASH (268) 25
USE (269)
COLON (270)
SEMICOLON (271)
COMMA (272) 16 18
LEFT_PARENTHESIS (273) 11 12 31
RIGHT_PARENTHESIS (274) 11 12 31
IF (275) 19
ELSE (276)
FOR (277)
WHILE (278)
EOL (279) 5 11 12 13 14 19
INT_LITERAL (280) 29
FLOAT_LITERAL (281) 28
STRING_LITERAL (282)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
block (30)
    on left: 2, on right: 1 12 19
lines (31)
    on left: 3 4, on right: 2 4 11
line (32)
    on left: 5 6, on right: 3 4
line_content (33)
    on left: 7 8, on right: 5 6
definition (34)
    on left: 9 10, on right: 8
function_definition (35)
    on left: 11, on right: 9
class_definition (36)
    on left: 12, on right: 10
members_definition (37)
    on left: 13 14, on right: 12 14
definition_arguments (38)
    on left: 15 16, on right: 11 12 16
expressions (39)
    on left: 17 18, on right: 18 31
expression (40)
    on left: 19 20 21 22 23 24 25, on right: 7 11 13 14 17 18 19 22
    23 24 25 26
assign_variable (41)
    on left: 26, on right: 21
monomial (42)
    on left: 27 28 29 30, on right: 20
function_call (43)
    on left: 31, on right: 27
variable (44)
    on left: 32, on right: 30


State 0

    0 $accept: . program "end of file"
    1 program: . block
    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    program              go to state 7
    block                go to state 8
    lines                go to state 9
    line                 go to state 10
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 1

   11 function_definition: FUNCTION_DEFINITION . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression

    LEFT_PARENTHESIS  shift, and go to state 20


State 2

   12 class_definition: CLASS_DEFINITION . LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 21


State 3

   26 assign_variable: IDENTIFIER . EQUAL expression
   31 function_call: IDENTIFIER . LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: IDENTIFIER .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]

    EQUAL             shift, and go to state 22
    LEFT_PARENTHESIS  shift, and go to state 23

    $default  reduce using rule 32 (variable)


State 4

   19 expression: . IF expression EOL block
   19           | IF . expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 24
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 5

   29 monomial: INT_LITERAL .

    $default  reduce using rule 29 (monomial)


State 6

   28 monomial: FLOAT_LITERAL .

    $default  reduce using rule 28 (monomial)


State 7

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 25


State 8

    1 program: block .

    $default  reduce using rule 1 (program)


State 9

    2 block: lines .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]
    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    $default  reduce using rule 2 (block)

    line                 go to state 26
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 10

    3 lines: line .

    $default  reduce using rule 3 (lines)


State 11

    5 line: line_content . EOL
    6     | line_content . "end of file"

    "end of file"  shift, and go to state 27
    EOL            shift, and go to state 28


State 12

    8 line_content: definition .

    $default  reduce using rule 8 (line_content)


State 13

    9 definition: function_definition .

    $default  reduce using rule 9 (definition)


State 14

   10 definition: class_definition .

    $default  reduce using rule 10 (definition)


State 15

    7 line_content: expression .  ["end of file", EOL]
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 7 (line_content)


State 16

   21 expression: assign_variable .

    $default  reduce using rule 21 (expression)


State 17

   20 expression: monomial .

    $default  reduce using rule 20 (expression)


State 18

   27 monomial: function_call .

    $default  reduce using rule 27 (monomial)


State 19

   30 monomial: variable .

    $default  reduce using rule 30 (monomial)


State 20

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   15 definition_arguments: . IDENTIFIER
   16                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 33

    definition_arguments  go to state 34


State 21

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS . definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   15 definition_arguments: . IDENTIFIER
   16                     | . definition_arguments COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 33

    definition_arguments  go to state 35


State 22

   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   26                | IDENTIFIER EQUAL . expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 36
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 23

   17 expressions: . expression
   18            | . expressions COMMA expression
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   31              | IDENTIFIER LEFT_PARENTHESIS . expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expressions      go to state 37
    expression       go to state 38
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 24

   19 expression: IF expression . EOL block
   22           | expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32
    EOL       shift, and go to state 39


State 25

    0 $accept: program "end of file" .

    $default  accept


State 26

    4 lines: lines line .

    $default  reduce using rule 4 (lines)


State 27

    6 line: line_content "end of file" .

    $default  reduce using rule 6 (line)


State 28

    5 line: line_content EOL .

    $default  reduce using rule 5 (line)


State 29

   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   22           | expression PLUS . expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 40
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 30

   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   23           | expression MINUS . expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 41
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 31

   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   24           | expression ASTERISK . expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 42
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 32

   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   25           | expression SLASH . expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 43
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 33

   15 definition_arguments: IDENTIFIER .

    $default  reduce using rule 15 (definition_arguments)


State 34

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS EOL lines RETURN expression
   16 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 44
    RIGHT_PARENTHESIS  shift, and go to state 45


State 35

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments . RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   16 definition_arguments: definition_arguments . COMMA IDENTIFIER

    COMMA              shift, and go to state 44
    RIGHT_PARENTHESIS  shift, and go to state 46


State 36

   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression
   26 assign_variable: IDENTIFIER EQUAL expression .  ["end of file", COMMA, RIGHT_PARENTHESIS, EOL]

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 26 (assign_variable)

    Conflict between rule 26 and token PLUS resolved as shift (EQUAL < PLUS).
    Conflict between rule 26 and token MINUS resolved as shift (EQUAL < MINUS).
    Conflict between rule 26 and token ASTERISK resolved as shift (EQUAL < ASTERISK).
    Conflict between rule 26 and token SLASH resolved as shift (EQUAL < SLASH).


State 37

   18 expressions: expressions . COMMA expression
   31 function_call: IDENTIFIER LEFT_PARENTHESIS expressions . RIGHT_PARENTHESIS

    COMMA              shift, and go to state 47
    RIGHT_PARENTHESIS  shift, and go to state 48


State 38

   17 expressions: expression .  [COMMA, RIGHT_PARENTHESIS]
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 17 (expressions)


State 39

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   19 expression: . IF expression EOL block
   19           | IF expression EOL . block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    block                go to state 49
    lines                go to state 9
    line                 go to state 10
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 40

   22 expression: expression . PLUS expression
   22           | expression PLUS expression .  ["end of file", PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, EOL]
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 22 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 22 and token ASTERISK resolved as shift (PLUS < ASTERISK).
    Conflict between rule 22 and token SLASH resolved as shift (PLUS < SLASH).


State 41

   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   23           | expression MINUS expression .  ["end of file", PLUS, MINUS, COMMA, RIGHT_PARENTHESIS, EOL]
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 23 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 23 and token ASTERISK resolved as shift (MINUS < ASTERISK).
    Conflict between rule 23 and token SLASH resolved as shift (MINUS < SLASH).


State 42

   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   24           | expression ASTERISK expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]
   25           | expression . SLASH expression

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token PLUS resolved as reduce (PLUS < ASTERISK).
    Conflict between rule 24 and token MINUS resolved as reduce (MINUS < ASTERISK).
    Conflict between rule 24 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 24 and token SLASH resolved as reduce (%left SLASH).


State 43

   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression
   25           | expression SLASH expression .  ["end of file", PLUS, MINUS, ASTERISK, SLASH, COMMA, RIGHT_PARENTHESIS, EOL]

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 25 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 25 and token ASTERISK resolved as reduce (%left ASTERISK).
    Conflict between rule 25 and token SLASH resolved as reduce (%left SLASH).


State 44

   16 definition_arguments: definition_arguments COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 50


State 45

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS . EOL lines RETURN expression

    EOL  shift, and go to state 51


State 46

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS . EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS

    EOL  shift, and go to state 52


State 47

   18 expressions: expressions COMMA . expression
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 53
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 48

   31 function_call: IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS .

    $default  reduce using rule 31 (function_call)


State 49

   19 expression: IF expression EOL block .

    $default  reduce using rule 19 (expression)


State 50

   16 definition_arguments: definition_arguments COMMA IDENTIFIER .

    $default  reduce using rule 16 (definition_arguments)


State 51

    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   11                    | FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL . lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    lines                go to state 54
    line                 go to state 10
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 52

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL . LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 55


State 53

   18 expressions: expressions COMMA expression .  [COMMA, RIGHT_PARENTHESIS]
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 18 (expressions)


State 54

    4 lines: lines . line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   11                    | FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines . RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    RETURN               shift, and go to state 56
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    line                 go to state 26
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 55

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS . EOL members_definition block RIGHT_PARENTHESIS

    EOL  shift, and go to state 57


State 56

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN . expression
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 58
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 57

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL . members_definition block RIGHT_PARENTHESIS
   13 members_definition: . MEMBER_IDENTIFIER EQUAL expression EOL
   14                   | . members_definition MEMBER_IDENTIFIER EQUAL expression EOL

    MEMBER_IDENTIFIER  shift, and go to state 59

    members_definition  go to state 60


State 58

   11 function_definition: FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression .  ["end of file", EOL]
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32

    $default  reduce using rule 11 (function_definition)


State 59

   13 members_definition: MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 61


State 60

    2 block: . lines
    3 lines: . line
    4      | . lines line
    5 line: . line_content EOL
    6     | . line_content "end of file"
    7 line_content: . expression
    8             | . definition
    9 definition: . function_definition
   10           | . class_definition
   11 function_definition: . FUNCTION_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL lines RETURN expression
   12 class_definition: . CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS
   12                 | CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition . block RIGHT_PARENTHESIS
   14 members_definition: members_definition . MEMBER_IDENTIFIER EQUAL expression EOL
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    FUNCTION_DEFINITION  shift, and go to state 1
    CLASS_DEFINITION     shift, and go to state 2
    MEMBER_IDENTIFIER    shift, and go to state 62
    IDENTIFIER           shift, and go to state 3
    IF                   shift, and go to state 4
    INT_LITERAL          shift, and go to state 5
    FLOAT_LITERAL        shift, and go to state 6

    block                go to state 63
    lines                go to state 9
    line                 go to state 10
    line_content         go to state 11
    definition           go to state 12
    function_definition  go to state 13
    class_definition     go to state 14
    expression           go to state 15
    assign_variable      go to state 16
    monomial             go to state 17
    function_call        go to state 18
    variable             go to state 19


State 61

   13 members_definition: MEMBER_IDENTIFIER EQUAL . expression EOL
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 64
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 62

   14 members_definition: members_definition MEMBER_IDENTIFIER . EQUAL expression EOL

    EQUAL  shift, and go to state 65


State 63

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 66


State 64

   13 members_definition: MEMBER_IDENTIFIER EQUAL expression . EOL
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32
    EOL       shift, and go to state 67


State 65

   14 members_definition: members_definition MEMBER_IDENTIFIER EQUAL . expression EOL
   19 expression: . IF expression EOL block
   20           | . monomial
   21           | . assign_variable
   22           | . expression PLUS expression
   23           | . expression MINUS expression
   24           | . expression ASTERISK expression
   25           | . expression SLASH expression
   26 assign_variable: . IDENTIFIER EQUAL expression
   27 monomial: . function_call
   28         | . FLOAT_LITERAL
   29         | . INT_LITERAL
   30         | . variable
   31 function_call: . IDENTIFIER LEFT_PARENTHESIS expressions RIGHT_PARENTHESIS
   32 variable: . IDENTIFIER

    IDENTIFIER     shift, and go to state 3
    IF             shift, and go to state 4
    INT_LITERAL    shift, and go to state 5
    FLOAT_LITERAL  shift, and go to state 6

    expression       go to state 68
    assign_variable  go to state 16
    monomial         go to state 17
    function_call    go to state 18
    variable         go to state 19


State 66

   12 class_definition: CLASS_DEFINITION LEFT_PARENTHESIS definition_arguments RIGHT_PARENTHESIS EOL LEFT_PARENTHESIS EOL members_definition block RIGHT_PARENTHESIS .

    $default  reduce using rule 12 (class_definition)


State 67

   13 members_definition: MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 13 (members_definition)


State 68

   14 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression . EOL
   22 expression: expression . PLUS expression
   23           | expression . MINUS expression
   24           | expression . ASTERISK expression
   25           | expression . SLASH expression

    PLUS      shift, and go to state 29
    MINUS     shift, and go to state 30
    ASTERISK  shift, and go to state 31
    SLASH     shift, and go to state 32
    EOL       shift, and go to state 69


State 69

   14 members_definition: members_definition MEMBER_IDENTIFIER EQUAL expression EOL .

    $default  reduce using rule 14 (members_definition)
